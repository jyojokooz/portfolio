

----- C:/hello/portfolio\.gitignore -----

env.js

----- C:/hello/portfolio\admin.html -----

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Portfolio Admin Panel</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <style>
      :root {
        --primary-color: #007bff;
        --danger-color: #dc3545;
        --light-gray: #f8f9fa;
        --gray: #dee2e6;
        --dark-gray: #343a40;
        --white: #ffffff;
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }
      body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          "Helvetica Neue", Arial, sans-serif;
        margin: 0;
        background-color: var(--light-gray);
        color: var(--dark-gray);
      }
      .login-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
      }
      .login-container {
        padding: 40px;
        background: var(--white);
        border-radius: 8px;
        box-shadow: var(--shadow);
        width: 100%;
        max-width: 400px;
        text-align: center;
      }
      #admin-container {
        display: none;
      }
      header {
        background-color: var(--dark-gray);
        color: var(--white);
        padding: 1rem 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      header h1 {
        margin: 0;
        font-size: 1.5rem;
      }
      main {
        padding: 2rem;
        max-width: 1200px;
        margin: 0 auto;
      }
      .grid-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
      }
      section {
        background: var(--white);
        padding: 2rem;
        border-radius: 8px;
        box-shadow: var(--shadow);
      }
      /* Profile section should span full width */
      .profile-section {
        grid-column: 1 / -1;
      }
      h2 {
        margin-top: 0;
        border-bottom: 1px solid var(--gray);
        padding-bottom: 0.5rem;
        margin-bottom: 1.5rem;
      }
      h3 {
        margin-top: 2rem;
        font-size: 1.1rem;
        color: var(--primary-color);
      }
      label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
      }
      input[type="text"],
      input[type="email"],
      input[type="password"],
      textarea {
        width: 100%;
        padding: 0.75rem;
        margin-bottom: 1rem;
        border: 1px solid var(--gray);
        border-radius: 4px;
        box-sizing: border-box;
        font-size: 1rem;
      }
      textarea {
        min-height: 100px;
        resize: vertical;
      }
      button {
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        font-weight: 500;
        transition: background-color 0.2s ease, transform 0.1s ease;
      }
      button[type="submit"] {
        background-color: var(--primary-color);
        color: var(--white);
      }
      button[type="submit"]:hover {
        background-color: #0056b3;
      }
      button:active {
        transform: scale(0.98);
      }
      #logout-button,
      .btn-secondary {
        background-color: #6c757d;
        color: var(--white);
        margin-left: 10px;
      }
      #logout-button:hover,
      .btn-secondary:hover {
        background-color: #5a6268;
      }
      .btn-upload {
        background-color: #17a2b8;
        color: var(--white);
        margin-bottom: 1rem;
        display: inline-block;
      }
      .btn-upload:hover {
        background-color: #138496;
      }
      .items-list {
        margin-top: 1.5rem;
      }
      .item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem;
        border: 1px solid var(--gray);
        border-radius: 4px;
        margin-bottom: 0.5rem;
      }
      .item span {
        font-weight: 500;
      }
      .item-buttons button {
        padding: 0.4rem 0.8rem;
        font-size: 0.9rem;
        margin-left: 0.5rem;
      }
      .btn-edit {
        background-color: #ffc107;
        color: var(--dark-gray);
      }
      .btn-delete {
        background-color: var(--danger-color);
        color: var(--white);
      }
      @media (max-width: 992px) {
        .grid-container {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </head>
  <body>
    <div id="login-wrapper" class="login-wrapper">
      <div id="login-container" class="login-container">
        <h2>Admin Login</h2>
        <input type="email" id="login-email" placeholder="Email" required />
        <input
          type="password"
          id="login-password"
          placeholder="Password"
          required
        />
        <button id="login-button" type="submit">Login</button>
      </div>
    </div>

    <div id="admin-container">
      <header>
        <h1>Portfolio Dashboard</h1>
        <button id="logout-button">
          Logout <i class="fas fa-sign-out-alt"></i>
        </button>
      </header>

      <main>
        <section class="profile-section">
          <h2><i class="fas fa-user-circle"></i> Profile Information</h2>
          <form id="profile-form">
            <label for="profile-name">Name</label>
            <input
              type="text"
              id="profile-name"
              placeholder="e.g., JOEL S RAPHAEL"
            />

            <label for="profile-job-title">Job Title</label>
            <input
              type="text"
              id="profile-job-title"
              placeholder="e.g., DESIGNER / DEVELOPER"
            />

            <label for="profile-bio">Bio Description</label>
            <textarea
              id="profile-bio"
              placeholder="A short, engaging bio..."
            ></textarea>

            <label for="profile-pic-url">Profile Picture URL</label>
            <input type="text" id="profile-pic-url" readonly />
            <button type="button" class="btn-upload" id="upload-profile-pic">
              Upload Picture
            </button>

            <label for="resume-url">Resume PDF URL</label>
            <input
              type="text"
              id="resume-url"
              placeholder="Paste your public Google Drive link here"
            />
            <button type="button" class="btn-upload" id="upload-resume-button">
              Upload with Cloudinary (Optional)
            </button>

            <label for="github-url">GitHub URL</label>
            <input type="text" id="github-url" />
            <label for="instagram-url">Instagram URL</label>
            <input type="text" id="instagram-url" />
            <label for="discord-url">Discord URL</label>
            <input type="text" id="discord-url" />

            <button type="submit">Save Profile</button>
          </form>
        </section>

        <div class="grid-container">
          <section>
            <h2><i class="fas fa-briefcase"></i> Projects</h2>
            <div id="projects-list" class="items-list"></div>
            <h3 id="project-form-title">Add New Project</h3>
            <form id="project-form">
              <input type="hidden" id="project-id" />
              <label for="project-title">Title</label>
              <input type="text" id="project-title" required />
              <label for="project-description">Description</label>
              <textarea id="project-description" required></textarea>
              <label for="project-image-url">Image URL</label>
              <input type="text" id="project-image-url" required readonly />
              <button
                type="button"
                class="btn-upload"
                id="upload-project-image"
              >
                Upload Image
              </button>
              <label for="project-live-url">Live URL</label>
              <input type="text" id="project-live-url" />
              <label for="project-code-url">Code URL</label>
              <input type="text" id="project-code-url" />
              <button type="submit">Save Project</button>
              <button
                type="button"
                id="clear-project-form"
                class="btn-secondary"
              >
                Clear
              </button>
            </form>
          </section>

          <section>
            <h2><i class="fas fa-certificate"></i> Certificates</h2>
            <div id="certificates-list" class="items-list"></div>
            <h3 id="certificate-form-title">Add New Certificate</h3>
            <form id="certificate-form">
              <input type="hidden" id="certificate-id" />
              <label for="certificate-title">Title</label>
              <input type="text" id="certificate-title" required />
              <label for="certificate-issuer">Issuer</label>
              <input
                type="text"
                id="certificate-issuer"
                placeholder="e.g., Tech Academy"
                required
              />
              <label for="certificate-image-url">Image URL</label>
              <input type="text" id="certificate-image-url" required readonly />
              <button
                type="button"
                class="btn-upload"
                id="upload-certificate-image"
              >
                Upload Image
              </button>
              <label for="certificate-verify-url">Verification URL</label>
              <input type="text" id="certificate-verify-url" />
              <button type="submit">Save Certificate</button>
              <button
                type="button"
                id="clear-certificate-form"
                class="btn-secondary"
              >
                Clear
              </button>
            </form>
          </section>
        </div>
        <section>
          <h2><i class="fas fa-code"></i> Skills</h2>
          <div id="skills-list" class="items-list"></div>
          <h3>Add New Skill</h3>
          <form id="skill-form">
            <label for="skill-name">Skill Name</label>
            <input
              type="text"
              id="skill-name"
              placeholder="e.g., JavaScript"
              required
            />
            <label for="skill-icon-class">Devicon Class</label>
            <input
              type="text"
              id="skill-icon-class"
              placeholder="e.g., devicon-javascript-plain"
              required
            />
            <button type="submit">Save Skill</button>
          </form>
        </section>
      </main>
    </div>

    <script
      src="https://upload-widget.cloudinary.com/global/all.js"
      type="text/javascript"
    ></script>
    <script src="env.js"></script>
    <script type="module" defer src="./scripts/admin.js"></script>
  </body>
</html>


----- C:/hello/portfolio\cp.py -----

import os
import tkinter as tk
from tkinter import filedialog, messagebox, scrolledtext

def combine_files():
    folder = filedialog.askdirectory(title="Select Project Folder")
    if not folder:
        return

    output_file = os.path.join(folder, "output.txt")

    text_box.delete(1.0, tk.END)
    text_box.insert(tk.END, f"Scanning folder: {folder}\n")

    with open(output_file, "w", encoding="utf-8") as outfile:
        for root, _, files in os.walk(folder):
            for file in files:
                # Skip binary files and the output file itself
                if file == "output.txt":
                    continue
                file_path = os.path.join(root, file)
                try:
                    with open(file_path, "r", encoding="utf-8") as infile:
                        content = infile.read()
                    outfile.write(f"\n\n----- {file_path} -----\n\n")
                    outfile.write(content)
                    text_box.insert(tk.END, f"Added: {file_path}\n")
                    text_box.see(tk.END)
                    root_window.update()
                except Exception as e:
                    text_box.insert(tk.END, f"Skipped {file_path}: {e}\n")
                    text_box.see(tk.END)
                    root_window.update()

    messagebox.showinfo("Done", f"All files combined into:\n{output_file}")
    text_box.insert(tk.END, "\n✅ All done!\n")

# --- UI Setup ---
root_window = tk.Tk()
root_window.title("Project Folder Combiner")
root_window.geometry("600x400")
root_window.resizable(False, False)

title_label = tk.Label(root_window, text="📁 Combine Project Files into One Text File", font=("Arial", 14, "bold"))
title_label.pack(pady=10)

combine_button = tk.Button(root_window, text="Select Folder & Combine Files", command=combine_files, bg="#0078D7", fg="white", font=("Arial", 12), padx=10, pady=5)
combine_button.pack(pady=5)

text_box = scrolledtext.ScrolledText(root_window, width=70, height=15, wrap=tk.WORD)
text_box.pack(pady=10, padx=10)

root_window.mainloop()


----- C:/hello/portfolio\create-env.js -----

const fs = require("fs");

// The content that will be written to env.js
const envContent = `
// This file is generated automatically by create-env.js during the build process
window.config = {
  firebaseConfig: {
    apiKey: "${process.env.FIREBASE_API_KEY}",
    authDomain: "${process.env.FIREBASE_AUTH_DOMAIN}",
    projectId: "${process.env.FIREBASE_PROJECT_ID}",
    storageBucket: "${process.env.FIREBASE_STORAGE_BUCKET}",
    messagingSenderId: "${process.env.FIREBASE_MESSAGING_SENDER_ID}",
    appId: "${process.env.FIREBASE_APP_ID}",
    measurementId: "${process.env.FIREBASE_MEASUREMENT_ID}",
  },
  cloudinary: {
    cloudName: "${process.env.CLOUDINARY_CLOUD_NAME}",
    uploadPreset: "${process.env.CLOUDINARY_UPLOAD_PRESET}",
  },
};
`;

// Write the content to the env.js file
fs.writeFile("env.js", envContent, (err) => {
  if (err) {
    console.error("Error creating env.js file:", err);
    process.exit(1); // Exit with an error code
  }
  console.log("Successfully created env.js from environment variables.");
});


----- C:/hello/portfolio\env.js -----

// env.js - DO NOT COMMIT THIS FILE TO GIT
window.config = {
  firebaseConfig: {
    apiKey: "AIzaSyD2OPP8RGaVrg_09rG9hysKOlbEpHGxPVs",
    authDomain: "profiloproj.firebaseapp.com",
    projectId: "profiloproj",
    storageBucket: "profiloproj.firebasestorage.app",
    messagingSenderId: "315226784829",
    appId: "1:315226784829:web:f4661cbc52a663354c9654",
    measurementId: "G-22CSJKMPR0",
  },
  cloudinary: {
    cloudName: "dqywvmbsz", // <-- Must match Cloudinary dashboard EXACTLY
    uploadPreset: "portfolio_uploads", // <-- Must match your preset name EXACTLY
  },
};


----- C:/hello/portfolio\firebase-config.js -----

// firebase-config.js
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js";
import { getFirestore } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-firestore.js";
import { getAuth } from "https://www.gstatic.com/firebasejs/9.15.0/firebase-auth.js";

// Check if window.config exists (it's created by env.js)
if (typeof window.config === "undefined") {
  throw new Error(
    "Configuration is missing. Make sure env.js is loaded and the config object is defined."
  );
}

// Get the config directly from the window.config object
const firebaseConfig = window.config.firebaseConfig;

// Validate Firebase configuration
const requiredFields = [
  "apiKey",
  "authDomain",
  "projectId",
  "storageBucket",
  "messagingSenderId",
  "appId",
];
for (const field of requiredFields) {
  if (!firebaseConfig[field]) {
    throw new Error(
      `Firebase configuration is missing required field: ${field}`
    );
  }
}

let firebaseApp;
let db;
let auth;

try {
  firebaseApp = initializeApp(firebaseConfig);
  db = getFirestore(firebaseApp);
  auth = getAuth(firebaseApp);
  console.log("Firebase initialized successfully");
} catch (error) {
  console.error("Error initializing Firebase:", error);
  throw error;
}

export { db, auth };


----- C:/hello/portfolio\index.html -----

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Joel S raphael | Portfolio</title>
    <!-- PWA & Add to Home Screen Meta Tags -->
    <link rel="manifest" href="manifest.json" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />
    <meta name="theme-color" content="#1a1a1a" />
    <!-- Google Fonts: Montserrat -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700;900&display=swap"
      rel="stylesheet"
    />
    <!-- Font Awesome Icons -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <!-- Devicon for Skills -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.15.1/devicon.min.css"
    />
    <!-- Lottie Animation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.12.2/lottie.min.js"></script>
    <style>
      /* --- 1. SETUP & CSS VARIABLES (OLD THEME) --- */
      :root {
        /* Light Mode */
        --card-bg-color: #ffffff;
        --text-color: #1a1a1a;
        --border-color: #1a1a1a;
        --shadow-color: #1a1a1a;
        --accent-color: #ffd400;
        --sidebar-bg: #1a1a1a;
        --sidebar-icon: #ffffff;
        --sidebar-icon-active: var(--accent-color);
        --sidebar-active-bg: rgba(255, 255, 255, 0.1);
        --font-family: "Montserrat", sans-serif;

        /* Modern Gradient Colors */
        --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --gradient-sunset: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --gradient-ocean: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --gradient-fire: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --gradient-aurora: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        --gradient-cosmic: linear-gradient(135deg, #ff0844 0%, #ffb199 100%);
      }

      body.dark-mode {
        /* Dark Mode */
        --card-bg-color: #1e1e1e;
        --text-color: #f0f0f0;
        --border-color: #f0f0f0;
        --shadow-color: #000000;
        --sidebar-icon: #f0f0f0;
        --sidebar-active-bg: rgba(255, 255, 255, 0.15);
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: var(--font-family);
        color: var(--text-color);
        background-color: #f8f9fa;
        background-attachment: fixed;
        transition: background-color 0.4s ease-in-out;
        position: relative;
        min-height: 100vh;
      }

      body.dark-mode {
        background-color: #1a1a2e;
      }

      #particles-js {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 0;
      }

      /* Loading Screen */
      .loading-screen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        transition: opacity 0.5s ease, visibility 0.5s ease;
        overflow: hidden;
      }
      body.dark-mode .loading-screen {
        background: #1a1a2e;
      }
      .loading-screen.hide {
        opacity: 0;
        visibility: hidden;
      }
      .loading-animation {
        width: 300px;
        height: 300px;
        transform: translateY(-60px);
      }
      .portfolio-container {
        opacity: 0;
        transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      }
      .portfolio-container.show {
        opacity: 1;
      }

      /* --- 2. MAIN LAYOUT --- */
      .portfolio-container {
        display: flex;
        height: 100vh;
      }

      .sidebar {
        width: 80px;
        padding: 2rem 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        flex-shrink: 0;
        background: var(--sidebar-bg);
        position: relative;
        z-index: 10;
      }

      .sidebar::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--gradient-primary);
        opacity: 0.05;
        z-index: -1;
      }

      .sidebar-top,
      .sidebar-bottom {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
      }

      .logo {
        font-weight: 900;
        font-size: 1.5rem;
        transition: color 0.3s ease;
      }

      .sidebar .logo {
        color: #ffffff;
      }

      .nav-links {
        list-style: none;
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        margin-top: 2rem;
      }
      .nav-links li {
        margin: 1rem 0;
        width: 100%;
        display: flex;
        justify-content: center;
      }

      .nav-link {
        font-size: 1.4rem;
        text-decoration: none;
        padding: 0.75rem;
        border-radius: 8px;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        width: 50px;
        height: 50px;
      }

      /* Sidebar specific link colors */
      .sidebar .nav-link {
        color: rgba(255, 255, 255, 0.7);
      }
      .sidebar .nav-link:hover {
        background-color: var(--sidebar-active-bg);
        color: #ffffff;
        transform: scale(1.1);
      }
      .sidebar .nav-link.active {
        color: var(--sidebar-icon-active);
        background-color: var(--sidebar-active-bg);
      }

      /* Desktop Theme Toggle Button */
      #desktop-theme-toggle {
        background: none;
        border: none;
        font-size: 1.4rem;
        cursor: pointer;
        color: rgba(255, 255, 255, 0.7);
        padding: 0.75rem;
        border-radius: 8px;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
      }
      #desktop-theme-toggle:hover {
        background-color: var(--sidebar-active-bg);
        color: #ffffff;
      }

      .main-content {
        flex-grow: 1;
        overflow: hidden;
        position: relative;
        z-index: 1;
      }

      .content-section {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow-y: auto;
        scroll-behavior: smooth;
        padding: 4rem;
        background: transparent;
      }

      .content-section::-webkit-scrollbar {
        width: 8px;
      }
      .content-section::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.1);
      }
      .content-section::-webkit-scrollbar-thumb {
        background: var(--border-color);
        border-radius: 4px;
      }
      .content-section::-webkit-scrollbar-thumb:hover {
        background: #555;
      }

      /* --- 3. CONTENT SECTIONS --- */
      .content-section.active {
        display: block;
        animation: page-fade-in 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      }
      .content-section.fade-out {
        animation: page-fade-out 0.5s cubic-bezier(0.4, 0, 0.2, 1);
      }
      @keyframes page-fade-in {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      @keyframes page-fade-out {
        from {
          opacity: 1;
          transform: translateY(0);
        }
        to {
          opacity: 0;
          transform: translateY(-20px);
        }
      }
      .section-title {
        font-size: 2.5rem;
        font-weight: 900;
        text-align: center;
        margin-bottom: 3rem;
        letter-spacing: 2px;
        text-transform: uppercase;
        background: var(--gradient-primary);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        position: relative;
        display: inline-block;
        width: 100%;
      }

      .section-title::after {
        content: "";
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: var(--gradient-sunset);
        border-radius: 2px;
      }

      /* --- 4. CARD & BUTTON STYLES (OLD THEME) --- */
      .home-card,
      .item-card,
      .contact-card,
      .skill-card {
        background-color: var(--card-bg-color);
        border: 3px solid var(--border-color);
        border-radius: 10px;
        padding: 2rem;
        box-shadow: 8px 8px 0 var(--shadow-color);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-align: center;
      }

      .home-card:hover,
      .item-card:hover,
      .contact-card:hover,
      .skill-card:hover {
        transform: translate(-4px, -4px);
        box-shadow: 12px 12px 0 var(--shadow-color);
      }

      .btn,
      .btn-small {
        display: inline-block;
        background: var(--gradient-fire);
        border: 3px solid var(--border-color);
        padding: 0.75rem 1.5rem;
        margin: 0 0.5rem;
        text-decoration: none;
        color: #ffffff;
        font-weight: 700;
        box-shadow: 4px 4px 0 var(--border-color);
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.9rem;
        cursor: pointer;
        position: relative;
        overflow: hidden;
        z-index: 1;
      }

      .btn::before,
      .btn-small::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: var(--gradient-sunset);
        transition: left 0.3s ease;
        z-index: -1;
      }
      .btn:hover::before,
      .btn-small:hover::before {
        left: 0;
      }
      .btn:hover,
      .btn-small:hover {
        transform: translate(-2px, -2px);
        box-shadow: 6px 6px 0 var(--border-color);
      }
      .btn:active,
      .btn-small:active {
        transform: translate(2px, 2px);
        box-shadow: 2px 2px 0 var(--border-color);
      }
      .btn-small {
        padding: 0.5rem 1rem;
        font-size: 0.85rem;
        border-width: 2px;
        box-shadow: 3px 3px 0 var(--border-color);
      }
      .btn-small:hover {
        box-shadow: 5px 5px 0 var(--border-color);
      }
      .btn-small:active {
        box-shadow: 1px 1px 0 var(--border-color);
      }

      /* --- 5. SPECIFIC SECTION STYLES --- */
      .home-card {
        max-width: 500px;
        margin: 4rem auto;
      }
      .profile-image-container {
        background: var(--gradient-primary);
        border: 3px solid var(--border-color);
        border-radius: 24px;
        padding: 0.75rem;
        width: 150px;
        height: 150px;
        margin: -6rem auto 1.5rem;
        box-shadow: 8px 8px 0 var(--shadow-color);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
      }
      .profile-image-container::before {
        content: "";
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: var(--gradient-ocean);
        opacity: 0;
        transition: opacity 0.3s ease;
        animation: rotate 10s linear infinite;
      }
      @keyframes rotate {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      .profile-image-container:hover::before {
        opacity: 0.3;
      }
      .profile-image-container:hover {
        transform: translate(-2px, -2px) rotate(-2deg);
        box-shadow: 10px 10px 0 var(--shadow-color);
      }
      .profile-pic {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
        position: relative;
        z-index: 1;
      }
      .name-title {
        font-size: 2rem;
        font-weight: 900;
        margin-bottom: 0.5rem;
        letter-spacing: -0.5px;
      }
      .job-title {
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 1rem;
        letter-spacing: 2px;
      }
      .bio-description {
        font-size: 0.95rem;
        font-weight: 400;
        margin-bottom: 1.5rem;
        color: var(--text-color);
        line-height: 1.6;
        max-width: 90%;
        margin-left: auto;
        margin-right: auto;
        opacity: 0.8;
      }
      .social-links {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
      }
      .social-links a {
        width: 45px;
        height: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: var(--card-bg-color);
        border: 2px solid var(--border-color);
        border-radius: 50%;
        color: var(--text-color);
        font-size: 1.2rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 3px 3px 0 var(--shadow-color);
      }
      .social-links a:hover {
        transform: translate(-2px, -2px) scale(1.1);
        box-shadow: 5px 5px 0 var(--shadow-color);
        background: var(--gradient-ocean);
        color: #ffffff;
      }
      .social-links a:active {
        transform: translate(1px, 1px);
        box-shadow: 2px 2px 0 var(--shadow-color);
      }
      .button-group {
        margin-top: 1.5rem;
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 1rem;
      }
      .button-group .btn {
        margin: 0;
      }
      .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 400px));
        gap: 3rem;
        justify-content: center;
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
      }
      .item-card {
        cursor: default;
        display: flex;
        flex-direction: column;
        position: relative;
        overflow: hidden;
      }
      .item-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: var(--gradient-primary);
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.3s ease;
      }
      .item-card:hover::before {
        transform: scaleX(1);
      }
      .item-card-content {
        flex-grow: 1;
      }
      .item-card img {
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 1rem;
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      }
      .item-card:hover img {
        transform: scale(1.05);
      }
      .item-card h3 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
        font-weight: 700;
        color: var(--text-color);
      }
      .item-card p {
        opacity: 0.8;
        margin-bottom: 1rem;
        line-height: 1.6;
        color: var(--text-color);
      }
      .skills-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 2rem;
        max-width: 800px;
        margin: 0 auto;
      }
      .skill-card {
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        position: relative;
        overflow: hidden;
      }
      .skill-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--gradient-aurora);
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 0;
      }
      .skill-card:hover::before {
        opacity: 0.15;
      }
      .skill-card i {
        font-size: 3.5rem;
        background: var(--gradient-cosmic);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        position: relative;
        z-index: 1;
        transition: transform 0.3s ease;
      }
      .skill-card:hover i {
        transform: scale(1.1) rotate(5deg);
      }
      .skill-card span {
        position: relative;
        z-index: 1;
        font-weight: 500;
        font-size: 0.9rem;
      }
      .contact-card {
        max-width: 600px;
        margin: 2rem auto;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .contact-card p {
        font-size: 1.1rem;
        margin-bottom: 1.5rem;
        line-height: 1.6;
      }
      .email-link {
        display: inline-block;
        font-size: 1.2rem;
        font-weight: 700;
        margin: 1.5rem 0;
        color: var(--text-color);
        text-decoration: none;
        transition: all 0.3s ease;
        word-break: break-all;
        text-align: center;
      }
      .email-link:hover {
        transform: scale(1.05);
        opacity: 0.8;
      }
      .social-icons {
        background-color: var(--card-bg-color);
        border: 2px solid var(--border-color);
        border-radius: 50px;
        padding: 0.75rem 1.5rem;
        display: inline-flex;
        gap: 1.5rem;
        margin-top: 1rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        flex-wrap: wrap;
        justify-content: center;
      }
      .social-icons:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      }
      .social-icons a {
        color: var(--text-color);
        font-size: 1.5rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: 40px;
        min-height: 40px;
      }
      .social-icons a:hover {
        color: var(--accent-color);
        transform: scale(1.2) rotate(5deg);
      }

      /* --- 6. MOBILE BARS --- */
      .mobile-header,
      .mobile-nav {
        display: none;
      }

      /* --- 7. RESPONSIVENESS --- */
      @media (max-width: 768px), (max-height: 500px) {
        .sidebar {
          display: none;
        }
        .mobile-header,
        .mobile-nav {
          display: flex;
        }
        .mobile-header {
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          z-index: 1001;
          justify-content: space-between;
          align-items: center;
          padding: 0.75rem 1.5rem;
          background: transparent;
        }
        .mobile-header .logo {
          margin: 0;
          color: var(--text-color);
          text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
          font-weight: 900;
        }
        #mobile-theme-toggle {
          background: none;
          border: none;
          color: var(--text-color);
          font-size: 1.4rem;
          cursor: pointer;
          padding: 0.5rem;
          text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
        }
        .mobile-nav {
          position: fixed;
          bottom: 0;
          left: 0;
          right: 0;
          z-index: 1001;
          background: var(--card-bg-color);
          justify-content: space-around;
          padding: 0.5rem 0;
          border-top: 1px solid rgba(0, 0, 0, 0.1);
          box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
        }
        body.dark-mode .mobile-nav {
          border-top: 1px solid rgba(255, 255, 255, 0.1);
          box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.2);
        }
        .mobile-nav .nav-link {
          color: #8a8a8a;
          opacity: 1;
          width: auto;
          height: auto;
          flex-direction: column;
          gap: 0.2rem;
          font-size: 0.75rem;
          font-weight: 500;
          transition: color 0.3s ease, transform 0.3s ease;
        }
        body.dark-mode .mobile-nav .nav-link {
          color: #888;
        }
        .mobile-nav .nav-link i {
          font-size: 1.4rem;
        }
        .mobile-nav .nav-link.active {
          color: var(--accent-color);
          transform: translateY(-4px);
        }
        .content-section {
          padding: 4rem 1.5rem 6rem 1.5rem;
          height: 100%;
        }
        .section-title {
          font-size: 2rem;
        }
        .home-card {
          margin: 3rem auto;
          max-width: 360px;
          padding: 1.5rem;
        }
        .profile-image-container {
          margin-top: -5.5rem;
          width: 130px;
          height: 130px;
        }
        .grid-container {
          gap: 2rem;
        }
        .item-card {
          padding: 1.5rem;
        }
        .item-card h3 {
          font-size: 1.25rem;
        }
        .item-card p {
          font-size: 0.9rem;
          line-height: 1.5;
          margin-bottom: 1.25rem;
        }
        .item-card .button-group {
          gap: 0.75rem;
        }
        .skills-grid {
          grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
          gap: 1.5rem;
        }
        .skill-card i {
          font-size: 3rem;
        }
      }
      @media (max-width: 480px) {
        .content-section {
          padding: 4rem 1rem 5rem 1rem;
        }
        .section-title {
          font-size: 1.75rem;
        }
        .name-title {
          font-size: 1.75rem;
        }
        .job-title {
          font-size: 0.9rem;
        }
        .item-card {
          padding: 1.25rem;
        }
        .item-card img {
          height: 160px;
        }
        .item-card h3 {
          font-size: 1.15rem;
        }
        .btn,
        .btn-small {
          padding: 0.6rem 1rem;
          font-size: 0.8rem;
        }
        .skills-grid {
          grid-template-columns: repeat(3, 1fr);
          gap: 1rem;
        }
        .skill-card {
          padding: 1rem;
        }
        .home-card {
          margin-top: 2.5rem;
        }
        .profile-image-container {
          width: 120px;
          height: 120px;
          margin-top: -4.5rem;
        }
      }

      /* --- 8. MODAL STYLES --- */
      .modal {
        display: none;
        position: fixed;
        z-index: 1002;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        animation: fadeInModal 0.3s ease;
      }
      @keyframes fadeInModal {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }
      .modal-content {
        position: relative;
        background-color: var(--card-bg-color);
        border: 3px solid var(--border-color);
        padding: 2rem;
        border-radius: 10px;
        width: 90%;
        max-width: 700px;
        box-shadow: 10px 10px 0 var(--shadow-color);
        animation: slideInModal 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
        max-height: 85vh;
        overflow-y: auto;
        text-align: left;
      }
      @keyframes slideInModal {
        from {
          transform: translateY(-50px);
          opacity: 0;
        }
        to {
          transform: translateY(0);
          opacity: 1;
        }
      }
      .modal-close {
        color: var(--text-color);
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 2rem;
        font-weight: bold;
        cursor: pointer;
        transition: transform 0.2s ease;
      }
      .modal-close:hover,
      .modal-close:focus {
        transform: scale(1.2);
      }
      .modal-content img {
        width: 100%;
        height: auto;
        max-height: 300px;
        object-fit: cover;
        border-radius: 5px;
        margin-bottom: 1.5rem;
      }
      .modal-content h3 {
        font-size: 2rem;
        margin-bottom: 1rem;
      }
      .modal-content p {
        line-height: 1.7;
        margin-bottom: 2rem;
        white-space: pre-wrap;
        text-align: left;
      }
      .modal-content .button-group {
        justify-content: flex-start;
      }
      .modal-content::-webkit-scrollbar {
        width: 6px;
      }
      .modal-content::-webkit-scrollbar-thumb {
        background: var(--border-color);
        border-radius: 3px;
      }
    </style>
  </head>
  <body>
    <div id="particles-js"></div>

    <div class="loading-screen" id="loading-screen">
      <div id="loading-animation" class="loading-animation"></div>
    </div>

    <div class="portfolio-container" id="portfolio-container">
      <nav class="sidebar">
        <div class="sidebar-top">
          <div class="logo">JSR</div>
          <ul class="nav-links">
            <li>
              <a
                href="#home"
                class="nav-link active"
                data-target="home"
                title="Home"
                ><i class="fas fa-home"></i
              ></a>
            </li>
            <li>
              <a
                href="#projects"
                class="nav-link"
                data-target="projects"
                title="Projects"
                ><i class="fas fa-briefcase"></i
              ></a>
            </li>
            <li>
              <a
                href="#skills"
                class="nav-link"
                data-target="skills"
                title="Skills"
                ><i class="fas fa-code"></i
              ></a>
            </li>
            <li>
              <a
                href="#certificates"
                class="nav-link"
                data-target="certificates"
                title="Certificates"
                ><i class="fas fa-certificate"></i
              ></a>
            </li>
            <li>
              <a
                href="#contact"
                class="nav-link"
                data-target="contact"
                title="Contact"
                ><i class="fas fa-envelope"></i
              ></a>
            </li>
          </ul>
        </div>
        <div class="sidebar-bottom">
          <button id="desktop-theme-toggle" title="Toggle Theme">
            <i class="fas fa-moon"></i>
          </button>
        </div>
      </nav>

      <header class="mobile-header">
        <div class="logo">JSR</div>
        <button id="mobile-theme-toggle" title="Toggle Theme">
          <i class="fas fa-moon"></i>
        </button>
      </header>

      <nav class="mobile-nav">
        <a href="#home" class="nav-link active" data-target="home" title="Home"
          ><i class="fas fa-home"></i><span>Home</span></a
        >
        <a
          href="#projects"
          class="nav-link"
          data-target="projects"
          title="Projects"
          ><i class="fas fa-briefcase"></i><span>Projects</span></a
        >
        <a href="#skills" class="nav-link" data-target="skills" title="Skills"
          ><i class="fas fa-code"></i><span>Skills</span></a
        >
        <a
          href="#certificates"
          class="nav-link"
          data-target="certificates"
          title="Certs"
          ><i class="fas fa-certificate"></i><span>Certs</span></a
        >
        <a
          href="#contact"
          class="nav-link"
          data-target="contact"
          title="Contact"
          ><i class="fas fa-envelope"></i><span>Contact</span></a
        >
      </nav>

      <main class="main-content">
        <section id="home" class="content-section active">
          <div class="home-card">
            <div class="profile-image-container">
              <img
                src="assets/default-profile.png"
                alt="Profile Picture"
                class="profile-pic"
                id="profile-pic"
              />
            </div>
            <h1 class="name-title" id="profile-name"></h1>
            <p class="job-title" id="profile-job-title"></p>
            <p class="bio-description" id="profile-bio"></p>
            <div class="social-links" id="social-links"></div>
            <div class="button-group">
              <a
                href="#"
                class="btn"
                id="resume-button"
                target="_blank"
                rel="noopener"
                >RESUME</a
              >
              <a href="#contact" class="btn" data-target="contact">CONTACT</a>
            </div>
          </div>
        </section>

        <section id="projects" class="content-section">
          <h2 class="section-title">PROJECTS</h2>
          <div class="grid-container" id="projects-grid"></div>
        </section>

        <section id="skills" class="content-section">
          <h2 class="section-title">SKILLS</h2>
          <div class="skills-grid" id="skills-grid"></div>
        </section>

        <section id="certificates" class="content-section">
          <h2 class="section-title">CERTIFICATES</h2>
          <div class="grid-container" id="certificates-grid"></div>
        </section>

        <section id="contact" class="content-section">
          <h2 class="section-title">CONTACT ME</h2>
          <div class="contact-card">
            <p>
              Feel free to reach out through email or connect with me on social
              media.
            </p>
            <a href="#" class="email-link" id="contact-email"></a>
            <div class="social-icons" id="contact-social-icons"></div>
          </div>
        </section>

        <div id="project-modal" class="modal">
          <div class="modal-content">
            <span class="modal-close">&times;</span>
            <img src="" alt="Project Image" id="modal-project-image" />
            <h3 id="modal-project-title"></h3>
            <p id="modal-project-description"></p>
          </div>
        </div>
      </main>
    </div>

    <script src="env.js"></script>
    <script src="scripts/particles.min.js"></script>
    <script type="module" src="./scripts/main.js"></script>

    <script>
      particlesJS("particles-js", {
        particles: {
          number: { value: 80, density: { enable: true, value_area: 800 } },
          color: { value: "#ffffff" },
          shape: { type: "circle" },
          opacity: { value: 0.5, random: false },
          size: { value: 3, random: true },
          line_linked: {
            enable: true,
            distance: 150,
            color: "#ffffff",
            opacity: 0.4,
            width: 1,
          },
          move: {
            enable: true,
            speed: 6,
            direction: "none",
            random: false,
            straight: false,
            out_mode: "out",
            bounce: false,
          },
        },
        interactivity: {
          detect_on: "canvas",
          events: {
            onhover: { enable: true, mode: "repulse" },
            onclick: { enable: false },
            resize: true,
          },
          modes: { repulse: { distance: 200, duration: 0.4 } },
        },
        retina_detect: true,
      });
    </script>
  </body>
</html>


----- C:/hello/portfolio\manifest.json -----

{
  "name": "Joel S Raphael | Portfolio",
  "short_name": "JSR",
  "start_url": ".",
  "display": "standalone",
  "background_color": "#f7f8fc",
  "theme_color": "#1a1a1a",
  "description": "Portfolio of Joel S Raphael, a designer and developer."
}


----- C:/hello/portfolio\netlify.toml -----

# Netlify build configuration
[build]
  # This command runs your build script from package.json
  # It will install dependencies and then run "node create-env.js"
  command = "npm run build"
  
  # The directory to publish after the build is complete.
  # Since your index.html is in the root, we use "."
  publish = "."

[build.environment]
  # Specify the Node.js version to ensure compatibility
  NODE_VERSION = "18"

----- C:/hello/portfolio\package.json -----

{
  "name": "portfolio",
  "version": "1.0.0",
  "description": "Portfolio site",
  "main": "index.js",
  "scripts": {
    "build": "node create-env.js"
  },
  "author": "",
  "license": "ISC"
}


----- C:/hello/portfolio\.git\COMMIT_EDITMSG -----

hd


----- C:/hello/portfolio\.git\config -----

[core]
	repositoryformatversion = 0
	filemode = false
	bare = false
	logallrefupdates = true
	symlinks = false
	ignorecase = true
[remote "origin"]
	url = https://github.com/jyojokooz/portfolio.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
	vscode-merge-base = origin/master


----- C:/hello/portfolio\.git\description -----

Unnamed repository; edit this file 'description' to name the repository.


----- C:/hello/portfolio\.git\FETCH_HEAD -----

173a7e572208cd442016de2633511f8167e8abcd		branch 'master' of https://github.com/jyojokooz/portfolio


----- C:/hello/portfolio\.git\HEAD -----

ref: refs/heads/master


----- C:/hello/portfolio\.git\ORIG_HEAD -----

173a7e572208cd442016de2633511f8167e8abcd


----- C:/hello/portfolio\.git\hooks\applypatch-msg.sample -----

#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


----- C:/hello/portfolio\.git\hooks\commit-msg.sample -----

#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


----- C:/hello/portfolio\.git\hooks\fsmonitor-watchman.sample -----

#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


----- C:/hello/portfolio\.git\hooks\post-update.sample -----

#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


----- C:/hello/portfolio\.git\hooks\pre-applypatch.sample -----

#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


----- C:/hello/portfolio\.git\hooks\pre-commit.sample -----

#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


----- C:/hello/portfolio\.git\hooks\pre-merge-commit.sample -----

#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


----- C:/hello/portfolio\.git\hooks\pre-push.sample -----

#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


----- C:/hello/portfolio\.git\hooks\pre-rebase.sample -----

#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


----- C:/hello/portfolio\.git\hooks\pre-receive.sample -----

#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


----- C:/hello/portfolio\.git\hooks\prepare-commit-msg.sample -----

#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


----- C:/hello/portfolio\.git\hooks\push-to-checkout.sample -----

#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


----- C:/hello/portfolio\.git\hooks\sendemail-validate.sample -----

#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi


----- C:/hello/portfolio\.git\hooks\update.sample -----

#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


----- C:/hello/portfolio\.git\info\exclude -----

# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


----- C:/hello/portfolio\.git\logs\HEAD -----

0000000000000000000000000000000000000000 f29620021a96729cc68f1e24cfdce93df79693cd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761416100 +0530	commit (initial): Initial commit of portfolio project
f29620021a96729cc68f1e24cfdce93df79693cd 487ca016abb7c20b075d5d07ad211b409b85d607 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761417866 +0530	commit: vow
487ca016abb7c20b075d5d07ad211b409b85d607 bfb1a45fa5eb6f20f8cafc65617279d017a3eae1 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761418110 +0530	commit: ha
bfb1a45fa5eb6f20f8cafc65617279d017a3eae1 c666cb7b6608ff649c98d1579c0e91ea964959a2 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761419873 +0530	commit: added toml file
c666cb7b6608ff649c98d1579c0e91ea964959a2 2742c6a9c2fc8d078696b8c26ee1dd911efbf2a5 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761421805 +0530	commit: done
2742c6a9c2fc8d078696b8c26ee1dd911efbf2a5 2e3fd5dfd9e6c71a150ae0dd2528621a8f3a905f JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761452795 +0530	commit: HA
2e3fd5dfd9e6c71a150ae0dd2528621a8f3a905f 97188bf4956e60b481f9c3f55093826fe9961b5d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761454107 +0530	commit: ha
97188bf4956e60b481f9c3f55093826fe9961b5d b3b9d2537ea70f50de6109fcc23611cbb383d145 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761454843 +0530	commit: Fix: Replace loading animation and resolve hang issue
b3b9d2537ea70f50de6109fcc23611cbb383d145 4807970a2f737bbe14d4de372a42b51334c890e9 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761455113 +0530	commit: hi
4807970a2f737bbe14d4de372a42b51334c890e9 48ad7884e8839fa979c0fa174c7fb3c3cbb1ca58 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761455469 +0530	commit: loading animation corrected
48ad7884e8839fa979c0fa174c7fb3c3cbb1ca58 9ca113d051320afec09f260721f3e68195272763 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761456551 +0530	commit: admin updated
9ca113d051320afec09f260721f3e68195272763 c284e8d47cfadc3068aa089943b435f374b649ce JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761459100 +0530	commit: g
c284e8d47cfadc3068aa089943b435f374b649ce f16d801275c85fbae1b21032f1ab59db74ba2784 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761460602 +0530	commit: Enhance portfolio with project modal functionality and improve item card layout
f16d801275c85fbae1b21032f1ab59db74ba2784 62db992f4821524b7485bd3531fb9e373de88bb9 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461068 +0530	commit: bugz solved
62db992f4821524b7485bd3531fb9e373de88bb9 7fc9391cd11447581034872a76fd46ed78e65553 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461727 +0530	commit: github bug updated
7fc9391cd11447581034872a76fd46ed78e65553 3b5d06cc098a3c78e74dd3b02077693baeee005d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461786 +0530	commit: index updated
3b5d06cc098a3c78e74dd3b02077693baeee005d a030eeb8fdd745058d60cccc58c552ef6240827a JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761468470 +0530	commit: Add skills section to admin panel and implement skill management functionality
a030eeb8fdd745058d60cccc58c552ef6240827a 0b8839f920d7d96472c342e01ec995fa03dcdc64 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761468922 +0530	commit: design
0b8839f920d7d96472c342e01ec995fa03dcdc64 67a08801ef4c27330f220646a038cc691958fac0 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761470508 +0530	commit: more ncy
67a08801ef4c27330f220646a038cc691958fac0 09642ad6323924ae000ecfbc853d936b1a2fc837 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761496206 +0530	commit: ha
09642ad6323924ae000ecfbc853d936b1a2fc837 f201c9e4df9bdd8ccf40b96ce9465bcf9d25ac12 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761496845 +0530	commit: m
f201c9e4df9bdd8ccf40b96ce9465bcf9d25ac12 147ac4632e8bcd768fcbcbd5394014ef579db2ca JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761497279 +0530	commit: h
147ac4632e8bcd768fcbcbd5394014ef579db2ca ebfaa3ca7ee6e9b905405f506a5c79e0cacb899d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761629739 +0530	commit: BUZ
ebfaa3ca7ee6e9b905405f506a5c79e0cacb899d 05bbc8c2e76cfb2040d5bc5229b1e27f46ff8662 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761630339 +0530	commit: G
05bbc8c2e76cfb2040d5bc5229b1e27f46ff8662 3c754dc80bba4774bb05f5f23e55237ecf351aa5 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761635263 +0530	commit: v
3c754dc80bba4774bb05f5f23e55237ecf351aa5 0de8bcd1016f069132503e5a0a2f20dbaf159cbe JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761636704 +0530	commit: ss
0de8bcd1016f069132503e5a0a2f20dbaf159cbe 30df73726e69ffb53b25d93014f97356f1a4ff27 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761637138 +0530	commit: jj
30df73726e69ffb53b25d93014f97356f1a4ff27 ddfd818f1f829aa20f5a9b1ec783f0d8bd245ea0 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761661603 +0530	commit: ui updated
ddfd818f1f829aa20f5a9b1ec783f0d8bd245ea0 3488a9c4d3864ad097f7c46c1d1aefe051c19d28 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761662358 +0530	commit: hi
3488a9c4d3864ad097f7c46c1d1aefe051c19d28 2f0210f2b0a5e1588dff595fd6afb32df3d75752 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761664179 +0530	commit: hh
2f0210f2b0a5e1588dff595fd6afb32df3d75752 143f2acc953eea89fac929382dfd6303c475cd48 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761666987 +0530	commit: particles added
143f2acc953eea89fac929382dfd6303c475cd48 c7fbac673cf4930516540fb99f968f37a7518356 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761667407 +0530	commit: default as dark theme
c7fbac673cf4930516540fb99f968f37a7518356 e74403ed67b557a7f277aa88a419657df7cf84bc JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761667721 +0530	commit: designed more
e74403ed67b557a7f277aa88a419657df7cf84bc 7c089fc9e21e18bdd35b94047ea80c31bd3bbdde JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761669228 +0530	commit: hh
7c089fc9e21e18bdd35b94047ea80c31bd3bbdde a6fb9962f7fc1e2eab8962d99701c44565e2d3bb JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761669660 +0530	commit: tt
a6fb9962f7fc1e2eab8962d99701c44565e2d3bb 1e67d4b0dc29efe43ee560695b529d5ddb22620d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761670106 +0530	commit: jdj
1e67d4b0dc29efe43ee560695b529d5ddb22620d 88560c07e8fe358c8c1510c667a0849deeda4b5b JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761671392 +0530	commit: design updated
88560c07e8fe358c8c1510c667a0849deeda4b5b acff032c5c29dc4eff162a336f73fd86bb23bad7 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761672083 +0530	commit: gg
acff032c5c29dc4eff162a336f73fd86bb23bad7 b9773cc536f60c3d0bb39a317e204c62ffc9a48a JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761674065 +0530	commit: ha
b9773cc536f60c3d0bb39a317e204c62ffc9a48a 173a7e572208cd442016de2633511f8167e8abcd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761674320 +0530	commit: hd


----- C:/hello/portfolio\.git\logs\refs\heads\master -----

0000000000000000000000000000000000000000 f29620021a96729cc68f1e24cfdce93df79693cd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761416100 +0530	commit (initial): Initial commit of portfolio project
f29620021a96729cc68f1e24cfdce93df79693cd 487ca016abb7c20b075d5d07ad211b409b85d607 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761417866 +0530	commit: vow
487ca016abb7c20b075d5d07ad211b409b85d607 bfb1a45fa5eb6f20f8cafc65617279d017a3eae1 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761418110 +0530	commit: ha
bfb1a45fa5eb6f20f8cafc65617279d017a3eae1 c666cb7b6608ff649c98d1579c0e91ea964959a2 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761419873 +0530	commit: added toml file
c666cb7b6608ff649c98d1579c0e91ea964959a2 2742c6a9c2fc8d078696b8c26ee1dd911efbf2a5 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761421805 +0530	commit: done
2742c6a9c2fc8d078696b8c26ee1dd911efbf2a5 2e3fd5dfd9e6c71a150ae0dd2528621a8f3a905f JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761452795 +0530	commit: HA
2e3fd5dfd9e6c71a150ae0dd2528621a8f3a905f 97188bf4956e60b481f9c3f55093826fe9961b5d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761454107 +0530	commit: ha
97188bf4956e60b481f9c3f55093826fe9961b5d b3b9d2537ea70f50de6109fcc23611cbb383d145 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761454843 +0530	commit: Fix: Replace loading animation and resolve hang issue
b3b9d2537ea70f50de6109fcc23611cbb383d145 4807970a2f737bbe14d4de372a42b51334c890e9 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761455113 +0530	commit: hi
4807970a2f737bbe14d4de372a42b51334c890e9 48ad7884e8839fa979c0fa174c7fb3c3cbb1ca58 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761455469 +0530	commit: loading animation corrected
48ad7884e8839fa979c0fa174c7fb3c3cbb1ca58 9ca113d051320afec09f260721f3e68195272763 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761456551 +0530	commit: admin updated
9ca113d051320afec09f260721f3e68195272763 c284e8d47cfadc3068aa089943b435f374b649ce JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761459100 +0530	commit: g
c284e8d47cfadc3068aa089943b435f374b649ce f16d801275c85fbae1b21032f1ab59db74ba2784 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761460602 +0530	commit: Enhance portfolio with project modal functionality and improve item card layout
f16d801275c85fbae1b21032f1ab59db74ba2784 62db992f4821524b7485bd3531fb9e373de88bb9 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461068 +0530	commit: bugz solved
62db992f4821524b7485bd3531fb9e373de88bb9 7fc9391cd11447581034872a76fd46ed78e65553 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461727 +0530	commit: github bug updated
7fc9391cd11447581034872a76fd46ed78e65553 3b5d06cc098a3c78e74dd3b02077693baeee005d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461786 +0530	commit: index updated
3b5d06cc098a3c78e74dd3b02077693baeee005d a030eeb8fdd745058d60cccc58c552ef6240827a JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761468470 +0530	commit: Add skills section to admin panel and implement skill management functionality
a030eeb8fdd745058d60cccc58c552ef6240827a 0b8839f920d7d96472c342e01ec995fa03dcdc64 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761468922 +0530	commit: design
0b8839f920d7d96472c342e01ec995fa03dcdc64 67a08801ef4c27330f220646a038cc691958fac0 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761470508 +0530	commit: more ncy
67a08801ef4c27330f220646a038cc691958fac0 09642ad6323924ae000ecfbc853d936b1a2fc837 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761496206 +0530	commit: ha
09642ad6323924ae000ecfbc853d936b1a2fc837 f201c9e4df9bdd8ccf40b96ce9465bcf9d25ac12 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761496845 +0530	commit: m
f201c9e4df9bdd8ccf40b96ce9465bcf9d25ac12 147ac4632e8bcd768fcbcbd5394014ef579db2ca JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761497279 +0530	commit: h
147ac4632e8bcd768fcbcbd5394014ef579db2ca ebfaa3ca7ee6e9b905405f506a5c79e0cacb899d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761629739 +0530	commit: BUZ
ebfaa3ca7ee6e9b905405f506a5c79e0cacb899d 05bbc8c2e76cfb2040d5bc5229b1e27f46ff8662 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761630339 +0530	commit: G
05bbc8c2e76cfb2040d5bc5229b1e27f46ff8662 3c754dc80bba4774bb05f5f23e55237ecf351aa5 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761635263 +0530	commit: v
3c754dc80bba4774bb05f5f23e55237ecf351aa5 0de8bcd1016f069132503e5a0a2f20dbaf159cbe JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761636704 +0530	commit: ss
0de8bcd1016f069132503e5a0a2f20dbaf159cbe 30df73726e69ffb53b25d93014f97356f1a4ff27 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761637138 +0530	commit: jj
30df73726e69ffb53b25d93014f97356f1a4ff27 ddfd818f1f829aa20f5a9b1ec783f0d8bd245ea0 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761661603 +0530	commit: ui updated
ddfd818f1f829aa20f5a9b1ec783f0d8bd245ea0 3488a9c4d3864ad097f7c46c1d1aefe051c19d28 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761662358 +0530	commit: hi
3488a9c4d3864ad097f7c46c1d1aefe051c19d28 2f0210f2b0a5e1588dff595fd6afb32df3d75752 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761664179 +0530	commit: hh
2f0210f2b0a5e1588dff595fd6afb32df3d75752 143f2acc953eea89fac929382dfd6303c475cd48 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761666987 +0530	commit: particles added
143f2acc953eea89fac929382dfd6303c475cd48 c7fbac673cf4930516540fb99f968f37a7518356 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761667407 +0530	commit: default as dark theme
c7fbac673cf4930516540fb99f968f37a7518356 e74403ed67b557a7f277aa88a419657df7cf84bc JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761667721 +0530	commit: designed more
e74403ed67b557a7f277aa88a419657df7cf84bc 7c089fc9e21e18bdd35b94047ea80c31bd3bbdde JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761669228 +0530	commit: hh
7c089fc9e21e18bdd35b94047ea80c31bd3bbdde a6fb9962f7fc1e2eab8962d99701c44565e2d3bb JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761669660 +0530	commit: tt
a6fb9962f7fc1e2eab8962d99701c44565e2d3bb 1e67d4b0dc29efe43ee560695b529d5ddb22620d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761670106 +0530	commit: jdj
1e67d4b0dc29efe43ee560695b529d5ddb22620d 88560c07e8fe358c8c1510c667a0849deeda4b5b JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761671392 +0530	commit: design updated
88560c07e8fe358c8c1510c667a0849deeda4b5b acff032c5c29dc4eff162a336f73fd86bb23bad7 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761672083 +0530	commit: gg
acff032c5c29dc4eff162a336f73fd86bb23bad7 b9773cc536f60c3d0bb39a317e204c62ffc9a48a JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761674065 +0530	commit: ha
b9773cc536f60c3d0bb39a317e204c62ffc9a48a 173a7e572208cd442016de2633511f8167e8abcd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761674320 +0530	commit: hd


----- C:/hello/portfolio\.git\logs\refs\remotes\origin\HEAD -----

0000000000000000000000000000000000000000 f29620021a96729cc68f1e24cfdce93df79693cd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761416864 +0530	fetch


----- C:/hello/portfolio\.git\logs\refs\remotes\origin\master -----

0000000000000000000000000000000000000000 f29620021a96729cc68f1e24cfdce93df79693cd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761416303 +0530	update by push
f29620021a96729cc68f1e24cfdce93df79693cd 487ca016abb7c20b075d5d07ad211b409b85d607 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761417872 +0530	update by push
487ca016abb7c20b075d5d07ad211b409b85d607 bfb1a45fa5eb6f20f8cafc65617279d017a3eae1 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761418117 +0530	update by push
bfb1a45fa5eb6f20f8cafc65617279d017a3eae1 c666cb7b6608ff649c98d1579c0e91ea964959a2 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761419878 +0530	update by push
c666cb7b6608ff649c98d1579c0e91ea964959a2 2742c6a9c2fc8d078696b8c26ee1dd911efbf2a5 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761421811 +0530	update by push
2742c6a9c2fc8d078696b8c26ee1dd911efbf2a5 2e3fd5dfd9e6c71a150ae0dd2528621a8f3a905f JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761452804 +0530	update by push
2e3fd5dfd9e6c71a150ae0dd2528621a8f3a905f 97188bf4956e60b481f9c3f55093826fe9961b5d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761454113 +0530	update by push
97188bf4956e60b481f9c3f55093826fe9961b5d b3b9d2537ea70f50de6109fcc23611cbb383d145 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761454859 +0530	update by push
b3b9d2537ea70f50de6109fcc23611cbb383d145 4807970a2f737bbe14d4de372a42b51334c890e9 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761455120 +0530	update by push
4807970a2f737bbe14d4de372a42b51334c890e9 48ad7884e8839fa979c0fa174c7fb3c3cbb1ca58 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761455477 +0530	update by push
48ad7884e8839fa979c0fa174c7fb3c3cbb1ca58 9ca113d051320afec09f260721f3e68195272763 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761456558 +0530	update by push
9ca113d051320afec09f260721f3e68195272763 c284e8d47cfadc3068aa089943b435f374b649ce JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761459106 +0530	update by push
c284e8d47cfadc3068aa089943b435f374b649ce f16d801275c85fbae1b21032f1ab59db74ba2784 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761460609 +0530	update by push
f16d801275c85fbae1b21032f1ab59db74ba2784 62db992f4821524b7485bd3531fb9e373de88bb9 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461074 +0530	update by push
62db992f4821524b7485bd3531fb9e373de88bb9 7fc9391cd11447581034872a76fd46ed78e65553 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461734 +0530	update by push
7fc9391cd11447581034872a76fd46ed78e65553 3b5d06cc098a3c78e74dd3b02077693baeee005d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761461792 +0530	update by push
3b5d06cc098a3c78e74dd3b02077693baeee005d a030eeb8fdd745058d60cccc58c552ef6240827a JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761468477 +0530	update by push
a030eeb8fdd745058d60cccc58c552ef6240827a 0b8839f920d7d96472c342e01ec995fa03dcdc64 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761468928 +0530	update by push
0b8839f920d7d96472c342e01ec995fa03dcdc64 67a08801ef4c27330f220646a038cc691958fac0 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761470515 +0530	update by push
67a08801ef4c27330f220646a038cc691958fac0 09642ad6323924ae000ecfbc853d936b1a2fc837 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761496212 +0530	update by push
09642ad6323924ae000ecfbc853d936b1a2fc837 f201c9e4df9bdd8ccf40b96ce9465bcf9d25ac12 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761496851 +0530	update by push
f201c9e4df9bdd8ccf40b96ce9465bcf9d25ac12 147ac4632e8bcd768fcbcbd5394014ef579db2ca JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761497286 +0530	update by push
147ac4632e8bcd768fcbcbd5394014ef579db2ca ebfaa3ca7ee6e9b905405f506a5c79e0cacb899d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761629748 +0530	update by push
ebfaa3ca7ee6e9b905405f506a5c79e0cacb899d 05bbc8c2e76cfb2040d5bc5229b1e27f46ff8662 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761630345 +0530	update by push
05bbc8c2e76cfb2040d5bc5229b1e27f46ff8662 3c754dc80bba4774bb05f5f23e55237ecf351aa5 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761635269 +0530	update by push
3c754dc80bba4774bb05f5f23e55237ecf351aa5 0de8bcd1016f069132503e5a0a2f20dbaf159cbe JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761636710 +0530	update by push
0de8bcd1016f069132503e5a0a2f20dbaf159cbe 30df73726e69ffb53b25d93014f97356f1a4ff27 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761637144 +0530	update by push
30df73726e69ffb53b25d93014f97356f1a4ff27 ddfd818f1f829aa20f5a9b1ec783f0d8bd245ea0 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761661609 +0530	update by push
ddfd818f1f829aa20f5a9b1ec783f0d8bd245ea0 3488a9c4d3864ad097f7c46c1d1aefe051c19d28 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761662364 +0530	update by push
3488a9c4d3864ad097f7c46c1d1aefe051c19d28 2f0210f2b0a5e1588dff595fd6afb32df3d75752 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761664186 +0530	update by push
2f0210f2b0a5e1588dff595fd6afb32df3d75752 143f2acc953eea89fac929382dfd6303c475cd48 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761666993 +0530	update by push
143f2acc953eea89fac929382dfd6303c475cd48 c7fbac673cf4930516540fb99f968f37a7518356 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761667413 +0530	update by push
c7fbac673cf4930516540fb99f968f37a7518356 e74403ed67b557a7f277aa88a419657df7cf84bc JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761667727 +0530	update by push
e74403ed67b557a7f277aa88a419657df7cf84bc 7c089fc9e21e18bdd35b94047ea80c31bd3bbdde JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761669246 +0530	update by push
7c089fc9e21e18bdd35b94047ea80c31bd3bbdde a6fb9962f7fc1e2eab8962d99701c44565e2d3bb JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761669666 +0530	update by push
a6fb9962f7fc1e2eab8962d99701c44565e2d3bb 1e67d4b0dc29efe43ee560695b529d5ddb22620d JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761670112 +0530	update by push
1e67d4b0dc29efe43ee560695b529d5ddb22620d 88560c07e8fe358c8c1510c667a0849deeda4b5b JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761671399 +0530	update by push
88560c07e8fe358c8c1510c667a0849deeda4b5b acff032c5c29dc4eff162a336f73fd86bb23bad7 JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761672089 +0530	update by push
acff032c5c29dc4eff162a336f73fd86bb23bad7 b9773cc536f60c3d0bb39a317e204c62ffc9a48a JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761674071 +0530	update by push
b9773cc536f60c3d0bb39a317e204c62ffc9a48a 173a7e572208cd442016de2633511f8167e8abcd JOEL S RAPHAEL <joelraphael6425@gmail.com> 1761674326 +0530	update by push


----- C:/hello/portfolio\.git\refs\heads\master -----

173a7e572208cd442016de2633511f8167e8abcd


----- C:/hello/portfolio\.git\refs\remotes\origin\HEAD -----

ref: refs/remotes/origin/master


----- C:/hello/portfolio\.git\refs\remotes\origin\master -----

173a7e572208cd442016de2633511f8167e8abcd


----- C:/hello/portfolio\.vscode\launch.json -----

{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Chrome against localhost",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        }
    ]
}

----- C:/hello/portfolio\scripts\admin.js -----

// scripts/admin.js
import { db, auth } from "../firebase-config.js";
import {
  doc,
  getDoc,
  setDoc,
  collection,
  addDoc,
  getDocs,
  updateDoc,
  deleteDoc,
} from "https://www.gstatic.com/firebasejs/9.15.0/firebase-firestore.js";
import {
  onAuthStateChanged,
  signInWithEmailAndPassword,
  signOut,
} from "https://www.gstatic.com/firebasejs/9.15.0/firebase-auth.js";

// --- DOM ELEMENTS ---
const loginWrapper = document.getElementById("login-wrapper");
const adminContainer = document.getElementById("admin-container");

// --- AUTHENTICATION ---
onAuthStateChanged(auth, (user) => {
  if (user) {
    loginWrapper.style.display = "none";
    adminContainer.style.display = "block";
    loadAllData();
  } else {
    loginWrapper.style.display = "flex";
    adminContainer.style.display = "none";
  }
});

document.getElementById("login-button").addEventListener("click", async () => {
  const email = document.getElementById("login-email").value;
  const password = document.getElementById("login-password").value;
  try {
    await signInWithEmailAndPassword(auth, email, password);
  } catch (error) {
    alert("Login failed: " + error.message);
  }
});

document
  .getElementById("logout-button")
  .addEventListener("click", () => signOut(auth));

// --- CLOUDINARY UPLOAD WIDGETS ---
let currentImageInput = null;
const imageWidget = cloudinary.createUploadWidget(
  {
    cloudName: config.cloudinary.cloudName,
    uploadPreset: config.cloudinary.uploadPreset,
  },
  (error, result) => {
    if (!error && result && result.event === "success") {
      if (currentImageInput) {
        currentImageInput.value = result.info.secure_url;
      }
    }
  }
);

const resumeWidget = cloudinary.createUploadWidget(
  {
    cloudName: config.cloudinary.cloudName,
    uploadPreset: config.cloudinary.uploadPreset,
    sources: ["local"],
    multiple: false,
    clientAllowedFormats: ["pdf"],
    resource_type: "raw",
  },
  (error, result) => {
    if (!error && result && result.event === "success") {
      document.getElementById("resume-url").value = result.info.secure_url;
      alert("Resume uploaded successfully!");
    }
  }
);

// --- SETUP UPLOAD BUTTONS ---
function setupImageUploadButton(buttonId, inputId) {
  document.getElementById(buttonId).addEventListener(
    "click",
    function () {
      currentImageInput = document.getElementById(inputId);
      imageWidget.open();
    },
    false
  );
}

setupImageUploadButton("upload-profile-pic", "profile-pic-url");
setupImageUploadButton("upload-project-image", "project-image-url");
setupImageUploadButton("upload-certificate-image", "certificate-image-url");

document.getElementById("upload-resume-button").addEventListener(
  "click",
  function () {
    resumeWidget.open();
  },
  false
);

// --- DATA LOADING & SAVING ---
function loadAllData() {
  loadProfileData();
  loadItems("projects", "projects-list", populateProjectForm);
  loadItems("certificates", "certificates-list", populateCertificateForm);
  loadItems("skills", "skills-list", () => {}); // Skills don't need an edit form for now
}

// Profile
async function loadProfileData() {
  try {
    const docRef = doc(db, "portfolio", "profile");
    const docSnap = await getDoc(docRef);
    if (docSnap.exists()) {
      const data = docSnap.data();
      document.getElementById("profile-name").value = data.name || "";
      document.getElementById("profile-job-title").value = data.jobTitle || "";
      document.getElementById("profile-bio").value = data.bio || "";
      document.getElementById("profile-pic-url").value =
        data.profilePicUrl || "";
      document.getElementById("resume-url").value = data.resumeUrl || "";
      document.getElementById("github-url").value = data.socials?.github || "";
      document.getElementById("instagram-url").value =
        data.socials?.instagram || "";
      document.getElementById("discord-url").value =
        data.socials?.discord || "";
    }
  } catch (error) {
    console.error("Error loading profile data:", error);
    alert("Could not load profile data.");
  }
}
document
  .getElementById("profile-form")
  .addEventListener("submit", async (e) => {
    e.preventDefault();
    const data = {
      name: document.getElementById("profile-name").value,
      jobTitle: document.getElementById("profile-job-title").value,
      bio: document.getElementById("profile-bio").value,
      profilePicUrl: document.getElementById("profile-pic-url").value,
      resumeUrl: document.getElementById("resume-url").value,
      socials: {
        github: document.getElementById("github-url").value,
        instagram: document.getElementById("instagram-url").value,
        discord: document.getElementById("discord-url").value,
      },
    };
    try {
      await setDoc(doc(db, "portfolio", "profile"), data);
      alert("Profile saved successfully!");
    } catch (error) {
      console.error("Error saving profile:", error);
      alert("Error saving profile.");
    }
  });

// Generic Item Loader
async function loadItems(collectionName, listElementId, editItemCallback) {
  const listElement = document.getElementById(listElementId);
  listElement.innerHTML = "";
  try {
    const querySnapshot = await getDocs(collection(db, collectionName));
    if (querySnapshot.empty) {
      listElement.innerHTML =
        "<p>No items found. Add one using the form below.</p>";
      return;
    }
    querySnapshot.forEach((doc) => {
      const item = doc.data();
      const itemTitle = item.title || item.name; // Use 'name' for skills, 'title' for others
      const itemDiv = document.createElement("div");
      itemDiv.className = "item";
      itemDiv.innerHTML = `
        <span>${itemTitle}</span>
        <div class="item-buttons">
            ${
              collectionName !== "skills" // Skills don't have an edit button for now
                ? `<button class="btn-edit" data-id="${doc.id}"><i class="fas fa-edit"></i> Edit</button>`
                : ""
            }
            <button class="btn-delete" data-id="${
              doc.id
            }"><i class="fas fa-trash"></i> Delete</button>
        </div>
      `;
      if (collectionName !== "skills") {
        itemDiv
          .querySelector(".btn-edit")
          .addEventListener("click", () => editItemCallback(doc.id, item));
      }
      itemDiv
        .querySelector(".btn-delete")
        .addEventListener("click", () =>
          deleteItem(collectionName, doc.id, listElementId, editItemCallback)
        );

      listElement.appendChild(itemDiv);
    });
  } catch (error) {
    console.error(`Error loading ${collectionName}:`, error);
    listElement.innerHTML = `<p style="color:red;">Error loading items.</p>`;
  }
}

// Generic Item Deleter
async function deleteItem(collectionName, id, listElementId, editItemCallback) {
  if (confirm("Are you sure you want to delete this item?")) {
    try {
      await deleteDoc(doc(db, collectionName, id));
      alert("Item deleted successfully.");
      loadItems(collectionName, listElementId, editItemCallback); // Refresh list
    } catch (error) {
      console.error("Error deleting item:", error);
      alert("Error deleting item.");
    }
  }
}

// --- PROJECTS ---
const projectForm = document.getElementById("project-form");
const projectFormTitle = document.getElementById("project-form-title");

function populateProjectForm(id, data) {
  projectFormTitle.textContent = "Edit Project";
  document.getElementById("project-id").value = id;
  document.getElementById("project-title").value = data.title;
  document.getElementById("project-description").value = data.description;
  document.getElementById("project-image-url").value = data.imageUrl;
  document.getElementById("project-live-url").value = data.liveUrl;
  document.getElementById("project-code-url").value = data.codeUrl;
}
projectForm.addEventListener("submit", async function (e) {
  e.preventDefault();
  const id = document.getElementById("project-id").value;
  const data = {
    title: document.getElementById("project-title").value,
    description: document.getElementById("project-description").value,
    imageUrl: document.getElementById("project-image-url").value,
    liveUrl: document.getElementById("project-live-url").value,
    codeUrl: document.getElementById("project-code-url").value,
  };
  try {
    if (id) {
      await updateDoc(doc(db, "projects", id), data);
    } else {
      await addDoc(collection(db, "projects"), data);
    }
    alert("Project saved successfully!");
    projectForm.reset();
    projectFormTitle.textContent = "Add New Project";
    document.getElementById("project-id").value = "";
    loadItems("projects", "projects-list", populateProjectForm);
  } catch (error) {
    console.error("Error saving project:", error);
    alert("Error saving project.");
  }
});
document.getElementById("clear-project-form").addEventListener("click", () => {
  projectForm.reset();
  projectFormTitle.textContent = "Add New Project";
  document.getElementById("project-id").value = "";
});

// --- CERTIFICATES ---
const certificateForm = document.getElementById("certificate-form");
const certificateFormTitle = document.getElementById("certificate-form-title");

function populateCertificateForm(id, data) {
  certificateFormTitle.textContent = "Edit Certificate";
  document.getElementById("certificate-id").value = id;
  document.getElementById("certificate-title").value = data.title;
  document.getElementById("certificate-issuer").value = data.issuer;
  document.getElementById("certificate-image-url").value = data.imageUrl;
  document.getElementById("certificate-verify-url").value = data.verifyUrl;
}
certificateForm.addEventListener("submit", async function (e) {
  e.preventDefault();
  const id = document.getElementById("certificate-id").value;
  const data = {
    title: document.getElementById("certificate-title").value,
    issuer: document.getElementById("certificate-issuer").value,
    imageUrl: document.getElementById("certificate-image-url").value,
    verifyUrl: document.getElementById("certificate-verify-url").value,
  };
  try {
    if (id) {
      await updateDoc(doc(db, "certificates", id), data);
    } else {
      await addDoc(collection(db, "certificates"), data);
    }
    alert("Certificate saved successfully!");
    certificateForm.reset();
    certificateFormTitle.textContent = "Add New Certificate";
    document.getElementById("certificate-id").value = "";
    loadItems("certificates", "certificates-list", populateCertificateForm);
  } catch (error) {
    console.error("Error saving certificate:", error);
    alert("Error saving certificate.");
  }
});
document
  .getElementById("clear-certificate-form")
  .addEventListener("click", () => {
    certificateForm.reset();
    certificateFormTitle.textContent = "Add New Certificate";
    document.getElementById("certificate-id").value = "";
  });

// --- SKILLS ---
const skillForm = document.getElementById("skill-form");

skillForm.addEventListener("submit", async function (e) {
  e.preventDefault();
  const data = {
    name: document.getElementById("skill-name").value,
    iconClass: document.getElementById("skill-icon-class").value,
  };
  try {
    await addDoc(collection(db, "skills"), data);
    alert("Skill saved successfully!");
    skillForm.reset();
    loadItems("skills", "skills-list", () => {});
  } catch (error) {
    console.error("Error saving skill:", error);
    alert("Error saving skill.");
  }
});


----- C:/hello/portfolio\scripts\main.js -----

// scripts/main.js
import { db } from "../firebase-config.js";
import {
  doc,
  getDoc,
  collection,
  getDocs,
} from "https://www.gstatic.com/firebasejs/9.15.0/firebase-firestore.js";

let projectsData = new Map();

document.addEventListener("DOMContentLoaded", () => {
  // Set Contact Email
  const userEmail = "joelraphael6425@gmail.com";
  const contactEmailLink = document.getElementById("contact-email");
  if (contactEmailLink) {
    contactEmailLink.href = `mailto:${userEmail}`;
    contactEmailLink.textContent = userEmail;
  }

  // --- 1. DATA FETCHING & POPULATING FUNCTIONS ---

  async function populateHomePage() {
    try {
      const docRef = doc(db, "portfolio", "profile");
      const docSnap = await getDoc(docRef);

      if (docSnap.exists()) {
        const data = docSnap.data();
        document.getElementById("profile-pic").src =
          data.profilePicUrl || "https://via.placeholder.com/150";
        document.getElementById("profile-pic").alt =
          data.name || "Profile Picture";
        document.getElementById("profile-name").textContent =
          data.name || "Your Name";
        document.getElementById("profile-job-title").textContent =
          data.jobTitle || "Your Job Title";
        document.getElementById("profile-bio").textContent =
          data.bio || "Your bio goes here.";
        document.getElementById("resume-button").href = data.resumeUrl || "#";

        const socialLinksHTML = `
          ${
            data.socials?.github
              ? `<a href="${data.socials.github}" title="GitHub" target="_blank" rel="noopener"><i class="fab fa-github"></i></a>`
              : ""
          }
          ${
            data.socials?.instagram
              ? `<a href="${data.socials.instagram}" title="Instagram" target="_blank" rel="noopener"><i class="fab fa-instagram"></i></a>`
              : ""
          }
          ${
            data.socials?.discord
              ? `<a href="${data.socials.discord}" title="Discord" target="_blank" rel="noopener"><i class="fab fa-discord"></i></a>`
              : ""
          }
        `;
        document.getElementById("social-links").innerHTML = socialLinksHTML;
        document.getElementById("contact-social-icons").innerHTML =
          socialLinksHTML;
      } else {
        console.log("No profile document found!");
      }
    } catch (error) {
      console.error("Error fetching profile data:", error);
    }
  }

  async function populateProjects() {
    try {
      const projectsGrid = document.getElementById("projects-grid");
      projectsGrid.innerHTML = "";
      projectsData.clear();
      const querySnapshot = await getDocs(collection(db, "projects"));
      const placeholderImg = "https://via.placeholder.com/400x180";

      const truncateText = (text, maxLength) => {
        if (!text || text.length <= maxLength) return text;
        const lastSpace = text.lastIndexOf(" ", maxLength);
        return text.substring(0, lastSpace > 0 ? lastSpace : maxLength) + "...";
      };

      querySnapshot.forEach((doc) => {
        const project = doc.data();
        projectsData.set(doc.id, project);
        const shortDescription = truncateText(project.description, 100);

        const projectCard = `
          <div class="item-card">
              <img src="${
                project.imageUrl ? project.imageUrl : placeholderImg
              }" alt="${project.title}" />
              <div class="item-card-content">
                <h3>${project.title}</h3>
                <p>${shortDescription}</p>
              </div>
              <div class="button-group">
                  ${
                    project.liveUrl
                      ? `<a href="${project.liveUrl}" class="btn-small" target="_blank" rel="noopener">Live</a>`
                      : ""
                  }
                  ${
                    project.codeUrl
                      ? `<a href="${project.codeUrl}" class="btn-small" target="_blank" rel="noopener">Code</a>`
                      : ""
                  }
                  <button class="btn-small view-details-btn" data-project-id="${
                    doc.id
                  }">Details</button>
              </div>
          </div>`;
        projectsGrid.innerHTML += projectCard;
      });
    } catch (error) {
      console.error("Error fetching projects:", error);
    }
  }

  async function populateSkills() {
    try {
      const skillsGrid = document.getElementById("skills-grid");
      skillsGrid.innerHTML = "";
      const querySnapshot = await getDocs(collection(db, "skills"));
      querySnapshot.forEach((doc) => {
        const skill = doc.data();
        const skillCard = `
          <div class="skill-card">
              <i class="${skill.iconClass}"></i>
              <span>${skill.name}</span>
          </div>
        `;
        skillsGrid.innerHTML += skillCard;
      });
    } catch (error) {
      console.error("Error fetching skills:", error);
    }
  }

  async function populateCertificates() {
    try {
      const certificatesGrid = document.getElementById("certificates-grid");
      certificatesGrid.innerHTML = "";
      const querySnapshot = await getDocs(collection(db, "certificates"));
      const placeholderImg = "https://via.placeholder.com/400x180";

      querySnapshot.forEach((doc) => {
        const cert = doc.data();
        const certCard = `
          <div class="item-card">
              <img src="${
                cert.imageUrl ? cert.imageUrl : placeholderImg
              }" alt="${cert.title}" />
              <div class="item-card-content">
                <h3>${cert.title}</h3>
                <p>Issued by: ${cert.issuer}</p>
              </div>
              <div class="button-group">
                  ${
                    cert.verifyUrl
                      ? `<a href="${cert.verifyUrl}" class="btn-small" target="_blank" rel="noopener">Verify</a>`
                      : ""
                  }
              </div>
          </div>`;
        certificatesGrid.innerHTML += certCard;
      });
    } catch (error) {
      console.error("Error fetching certificates:", error);
    }
  }

  // --- A. LOADING SCREEN & DATA INITIALIZATION ---
  const loadingScreen = document.getElementById("loading-screen");
  const portfolioContainer = document.getElementById("portfolio-container");
  const loadingAnimation = lottie.loadAnimation({
    container: document.getElementById("loading-animation"),
    renderer: "svg",
    loop: true,
    autoplay: true,
    animationData: {
      v: "4.10.1",
      fr: 24,
      ip: 0,
      op: 72,
      w: 400,
      h: 400,
      nm: "Comp 1",
      ddd: 0,
      assets: [
        {
          id: "comp_0",
          layers: [
            {
              ddd: 0,
              ind: 1,
              ty: 4,
              nm: "Capa de formas 12",
              sr: 1,
              ks: {
                o: { a: 0, k: 100, ix: 11 },
                r: { a: 0, k: 0, ix: 10 },
                p: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0.833, y: 0.833 },
                      o: { x: 0.167, y: 0.167 },
                      n: "0p833_0p833_0p167_0p167",
                      t: 24,
                      s: [81.5, 370.25, 0],
                      e: [445.5, 199.25, 0],
                      to: [60.6666679382324, -28.5, 0],
                      ti: [-60.6666679382324, 28.5, 0],
                    },
                    { t: 48 },
                  ],
                  ix: 2,
                },
                a: { a: 0, k: [0, 0, 0], ix: 1 },
                s: { a: 0, k: [43, 43, 100], ix: 6 },
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      ind: 0,
                      ty: "sh",
                      ix: 1,
                      ks: {
                        a: 0,
                        k: {
                          i: [
                            [28, 0],
                            [34.935, -19.483],
                            [31.619, 18.821],
                            [33, -14],
                            [57, 29],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                          ],
                          o: [
                            [-28, 0],
                            [-52, 29],
                            [-42, -25],
                            [-28.892, 12.257],
                            [-57, -29],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                          ],
                          v: [
                            [367.75, -97],
                            [277, -75],
                            [155, -82],
                            [35, -82],
                            [-94, -82.326],
                            [-200, -74],
                            [-352.07, 320.209],
                            [499.162, 354.093],
                          ],
                          c: true,
                        },
                        ix: 2,
                      },
                      nm: "Trazado 1",
                      mn: "ADBE Vector Shape - Group",
                      hd: false,
                    },
                    {
                      ty: "fl",
                      c: { a: 0, k: [0.1255, 0.1529, 0.1725, 1], ix: 4 },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      nm: "Relleno 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [0, 0], ix: 2 },
                      a: { a: 0, k: [0, 0], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transformar",
                    },
                  ],
                  nm: "Forma 1",
                  np: 3,
                  cix: 2,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                },
              ],
              ip: 0,
              op: 144,
              st: 0,
              bm: 0,
            },
            {
              ddd: 0,
              ind: 2,
              ty: 4,
              nm: "Capa de formas 2",
              sr: 1,
              ks: {
                o: { a: 0, k: 100, ix: 11 },
                r: { a: 0, k: 0, ix: 10 },
                p: {
                  a: 1,
                  k: [
                    {
                      i: { x: 0.833, y: 0.833 },
                      o: { x: 0.167, y: 0.167 },
                      n: "0p833_0p833_0p167_0p167",
                      t: 24,
                      s: [-133, 374, 0],
                      e: [231, 203, 0],
                      to: [60.6666679382324, -28.5, 0],
                      ti: [-60.6666679382324, 28.5, 0],
                    },
                    { t: 48 },
                  ],
                  ix: 2,
                },
                a: { a: 0, k: [0, 0, 0], ix: 1 },
                s: { a: 0, k: [43, 43, 100], ix: 6 },
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      ind: 0,
                      ty: "sh",
                      ix: 1,
                      ks: {
                        a: 0,
                        k: {
                          i: [
                            [28, 0],
                            [34.935, -19.483],
                            [31.619, 18.821],
                            [33, -14],
                            [57, 29],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                          ],
                          o: [
                            [-28, 0],
                            [-52, 29],
                            [-42, -25],
                            [-28.892, 12.257],
                            [-57, -29],
                            [0, 0],
                            [0, 0],
                            [0, 0],
                          ],
                          v: [
                            [367.75, -97],
                            [277, -75],
                            [155, -82],
                            [35, -82],
                            [-94, -82.326],
                            [-200, -74],
                            [-352.07, 320.209],
                            [499.162, 354.093],
                          ],
                          c: true,
                        },
                        ix: 2,
                      },
                      nm: "Trazado 1",
                      mn: "ADBE Vector Shape - Group",
                      hd: false,
                    },
                    {
                      ty: "fl",
                      c: { a: 0, k: [0.9922, 0.949, 0.9922, 1], ix: 4 },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      nm: "Relleno 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [0, 0], ix: 2 },
                      a: { a: 0, k: [0, 0], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transformar",
                    },
                  ],
                  nm: "Forma 1",
                  np: 3,
                  cix: 2,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                },
              ],
              ip: 0,
              op: 144,
              st: 0,
              bm: 0,
            },
          ],
        },
      ],
      layers: [
        {
          ddd: 0,
          ind: 1,
          ty: 4,
          nm: "Capa de formas 5",
          sr: 1,
          ks: {
            o: {
              a: 1,
              k: [
                {
                  i: { x: [0.833], y: [0.833] },
                  o: { x: [0.167], y: [0.167] },
                  n: ["0p833_0p833_0p167_0p167"],
                  t: 15,
                  s: [100],
                  e: [0],
                },
                { t: 16 },
              ],
              ix: 11,
            },
            r: { a: 0, k: 0, ix: 10 },
            p: {
              a: 1,
              k: [
                {
                  i: { x: 0.833, y: 0.833 },
                  o: { x: 0.167, y: 0.167 },
                  n: "0p833_0p833_0p167_0p167",
                  t: 0,
                  s: [199, -14, 0],
                  e: [199, 156, 0],
                  to: [0, 28.3333339691162, 0],
                  ti: [0, -28.9375, 0],
                },
                {
                  i: { x: 0.833, y: 0.833 },
                  o: { x: 0.167, y: 0.167 },
                  n: "0p833_0p833_0p167_0p167",
                  t: 12,
                  s: [199, 156, 0],
                  e: [199, 164.066, 0],
                  to: [0, 4.54861259460449, 0],
                  ti: [0, -2.45892143249512, 0],
                },
                {
                  i: { x: 0.833, y: 0.833 },
                  o: { x: 0.167, y: 0.167 },
                  n: "0p833_0p833_0p167_0p167",
                  t: 13,
                  s: [199, 164.066, 0],
                  e: [199, 166.125, 0],
                  to: [0, 13.1843204498291, 0],
                  ti: [0, -1.72074222564697, 0],
                },
                {
                  i: { x: 0.833, y: 0.833 },
                  o: { x: 0.167, y: 0.167 },
                  n: "0p833_0p833_0p167_0p167",
                  t: 14,
                  s: [199, 166.125, 0],
                  e: [199, 168.375, 0],
                  to: [0, 2.04166674613953, 0],
                  ti: [0, -0.04166666790843, 0],
                },
                { t: 15 },
              ],
              ix: 2,
            },
            a: { a: 0, k: [-1, -182.375, 0], ix: 1 },
            s: {
              a: 1,
              k: [
                {
                  i: { x: [0.833, 0.833, 0.833], y: [0.833, 0.833, 0.833] },
                  o: { x: [0.167, 0.167, 0.167], y: [0.167, 0.167, 0.167] },
                  n: [
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                  ],
                  t: 0,
                  s: [50, 50, 100],
                  e: [50, 94, 100],
                },
                {
                  i: { x: [0.833, 0.833, 0.833], y: [0.833, 0.833, 0.833] },
                  o: { x: [0.167, 0.167, 0.167], y: [0.167, 0.167, 0.167] },
                  n: [
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                  ],
                  t: 12,
                  s: [50, 94, 100],
                  e: [70, 43.333, 100],
                },
                {
                  i: { x: [0.833, 0.833, 0.833], y: [0.833, 0.833, 0.833] },
                  o: { x: [0.167, 0.167, 0.167], y: [0.167, 0.167, 0.167] },
                  n: [
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                  ],
                  t: 13,
                  s: [70, 43.333, 100],
                  e: [104.258, 32, 100],
                },
                {
                  i: { x: [0.833, 0.833, 0.833], y: [0.833, 0.833, 0.833] },
                  o: { x: [0.167, 0.167, 0.167], y: [0.167, 0.167, 0.167] },
                  n: [
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                  ],
                  t: 14,
                  s: [104.258, 32, 100],
                  e: [212, 18, 100],
                },
                { t: 15 },
              ],
              ix: 6,
            },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  ind: 0,
                  ty: "sh",
                  ix: 1,
                  ks: {
                    a: 0,
                    k: {
                      i: [
                        [0.938, 0],
                        [0, -5.25],
                        [-4.563, 0.125],
                        [0.108, 4.624],
                      ],
                      o: [
                        [-0.813, 0.125],
                        [0, 4.813],
                        [4.563, -0.125],
                        [-0.125, -5.375],
                      ],
                      v: [
                        [-1.344, -193.078],
                        [-8.75, -180.5],
                        [-1.063, -172.313],
                        [6.938, -180.188],
                      ],
                      c: true,
                    },
                    ix: 2,
                  },
                  nm: "Trazado 1",
                  mn: "ADBE Vector Shape - Group",
                  hd: false,
                },
                {
                  ty: "fl",
                  c: { a: 0, k: [0.1255, 0.1529, 0.1725, 1], ix: 4 },
                  o: { a: 0, k: 100, ix: 5 },
                  r: 1,
                  nm: "Relleno 1",
                  mn: "ADBE Vector Graphic - Fill",
                  hd: false,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [0, 0], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "Transformar",
                },
              ],
              nm: "Forma 1",
              np: 3,
              cix: 2,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: false,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
        {
          ddd: 0,
          ind: 8,
          ty: 4,
          nm: "Capa de formas 3",
          sr: 1,
          ks: {
            o: {
              a: 1,
              k: [
                {
                  i: { x: [0.833], y: [0.833] },
                  o: { x: [0.167], y: [0.167] },
                  n: ["0p833_0p833_0p167_0p167"],
                  t: 46,
                  s: [0],
                  e: [100],
                },
                {
                  i: { x: [0.833], y: [0.833] },
                  o: { x: [0.167], y: [0.167] },
                  n: ["0p833_0p833_0p167_0p167"],
                  t: 47,
                  s: [100],
                  e: [100],
                },
                { t: 48 },
              ],
              ix: 11,
            },
            r: { a: 0, k: 0, ix: 10 },
            p: {
              a: 1,
              k: [
                {
                  i: { x: 0.833, y: 0.833 },
                  o: { x: 0.167, y: 0.167 },
                  n: "0p833_0p833_0p167_0p167",
                  t: 47,
                  s: [199.98, 168.25, 0],
                  e: [199.98, 158.037, 0],
                  to: [0, -0.20375619828701, 0],
                  ti: [0, 17.58864402771, 0],
                },
                {
                  i: { x: 0.833, y: 0.833 },
                  o: { x: 0.167, y: 0.167 },
                  n: "0p833_0p833_0p167_0p167",
                  t: 48,
                  s: [199.98, 158.037, 0],
                  e: [199.98, -10, 0],
                  to: [-2.8421709430404e-14, -50.4047393798828, 0],
                  ti: [0, 1.17485654354095, 0],
                },
                { t: 53 },
              ],
              ix: 2,
            },
            a: { a: 0, k: [-32, -31, 0], ix: 1 },
            s: {
              a: 1,
              k: [
                {
                  i: { x: [0.833, 0.833, 0.833], y: [0.833, 0.833, 0.833] },
                  o: { x: [0.167, 0.167, 0.167], y: [0.167, 0.167, 0.167] },
                  n: [
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                  ],
                  t: 47,
                  s: [-4, 1, 100],
                  e: [1.5, 4, 100],
                },
                {
                  i: { x: [0.833, 0.833, 0.833], y: [0.833, 0.833, 0.833] },
                  o: { x: [0.167, 0.167, 0.167], y: [0.167, 0.167, 0.167] },
                  n: [
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                    "0p833_0p833_0p167_0p167",
                  ],
                  t: 48,
                  s: [1.5, 4, 100],
                  e: [2, 3, 100],
                },
                { t: 53 },
              ],
              ix: 6,
            },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  d: 1,
                  ty: "el",
                  s: { a: 0, k: [308, 308], ix: 2 },
                  p: { a: 0, k: [0, 0], ix: 3 },
                  nm: "Trazado elíptico 1",
                  mn: "ADBE Vector Shape - Ellipse",
                  hd: false,
                },
                {
                  ty: "fl",
                  c: { a: 0, k: [0.1255, 0.1529, 0.1725, 1], ix: 4 },
                  o: { a: 0, k: 100, ix: 5 },
                  r: 1,
                  nm: "Relleno 1",
                  mn: "ADBE Vector Graphic - Fill",
                  hd: false,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [-31, -31], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "Transformar",
                },
              ],
              nm: "Elipse 1",
              np: 3,
              cix: 2,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: false,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
        {
          ddd: 0,
          ind: 9,
          ty: 4,
          nm: "Capa de formas 4",
          sr: 1,
          ks: {
            o: { a: 0, k: 100, ix: 11 },
            r: { a: 0, k: 0, ix: 10 },
            p: { a: 0, k: [199, 252.99999999999997, 0], ix: 2 },
            a: { a: 0, k: [-32, -31, 0], ix: 1 },
            s: { a: 0, k: [55, 55, 100], ix: 6 },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  d: 1,
                  ty: "el",
                  s: { a: 0, k: [308, 308], ix: 2 },
                  p: { a: 0, k: [0, 0], ix: 3 },
                  nm: "Trazado elíptico 1",
                  mn: "ADBE Vector Shape - Ellipse",
                  hd: false,
                },
                {
                  ty: "st",
                  c: { a: 0, k: [0.1255, 0.1529, 0.1725, 1], ix: 3 },
                  o: { a: 0, k: 100, ix: 4 },
                  w: { a: 0, k: 10, ix: 5 },
                  lc: 1,
                  lj: 1,
                  ml: 4,
                  nm: "Trazo 1",
                  mn: "ADBE Vector Graphic - Stroke",
                  hd: false,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [-31, -31], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "Transformar",
                },
              ],
              nm: "Elipse 1",
              np: 3,
              cix: 2,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: false,
            },
            {
              ty: "tm",
              s: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [0.833] },
                    o: { x: [0.167], y: [0.167] },
                    n: ["0p833_0p833_0p167_0p167"],
                    t: 12,
                    s: [50],
                    e: [100],
                  },
                  {
                    i: { x: [0.833], y: [0.833] },
                    o: { x: [0.167], y: [0.167] },
                    n: ["0p833_0p833_0p167_0p167"],
                    t: 24,
                    s: [100],
                    e: [50],
                  },
                  { t: 48 },
                ],
                ix: 1,
              },
              e: {
                a: 1,
                k: [
                  {
                    i: { x: [0.833], y: [0.833] },
                    o: { x: [0.167], y: [0.167] },
                    n: ["0p833_0p833_0p167_0p167"],
                    t: 12,
                    s: [50],
                    e: [0],
                  },
                  {
                    i: { x: [0.833], y: [0.833] },
                    o: { x: [0.167], y: [0.167] },
                    n: ["0p833_0p833_0p167_0p167"],
                    t: 24,
                    s: [0],
                    e: [50],
                  },
                  { t: 48 },
                ],
                ix: 2,
              },
              o: { a: 0, k: 180, ix: 3 },
              m: 1,
              ix: 2,
              nm: "Recortar trazados 1",
              mn: "ADBE Vector Filter - Trim",
              hd: false,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
        {
          ddd: 0,
          ind: 10,
          ty: 4,
          nm: "Capa de formas 1",
          td: 1,
          sr: 1,
          ks: {
            o: { a: 0, k: 100, ix: 11 },
            r: { a: 0, k: 0, ix: 10 },
            p: { a: 0, k: [199, 252.99999999999997, 0], ix: 2 },
            a: { a: 0, k: [-32, -31, 0], ix: 1 },
            s: { a: 0, k: [50, 50, 100], ix: 6 },
          },
          ao: 0,
          shapes: [
            {
              ty: "gr",
              it: [
                {
                  d: 1,
                  ty: "el",
                  s: { a: 0, k: [308, 308], ix: 2 },
                  p: { a: 0, k: [0, 0], ix: 3 },
                  nm: "Trazado elíptico 1",
                  mn: "ADBE Vector Shape - Ellipse",
                  hd: false,
                },
                {
                  ty: "fl",
                  c: { a: 0, k: [0.1255, 0.1529, 0.1725, 1], ix: 4 },
                  o: { a: 0, k: 100, ix: 5 },
                  r: 1,
                  nm: "Relleno 1",
                  mn: "ADBE Vector Graphic - Fill",
                  hd: false,
                },
                {
                  ty: "tr",
                  p: { a: 0, k: [-31, -31], ix: 2 },
                  a: { a: 0, k: [0, 0], ix: 1 },
                  s: { a: 0, k: [100, 100], ix: 3 },
                  r: { a: 0, k: 0, ix: 6 },
                  o: { a: 0, k: 100, ix: 7 },
                  sk: { a: 0, k: 0, ix: 4 },
                  sa: { a: 0, k: 0, ix: 5 },
                  nm: "Transformar",
                },
              ],
              nm: "Elipse 1",
              np: 3,
              cix: 2,
              ix: 1,
              mn: "ADBE Vector Group",
              hd: false,
            },
          ],
          ip: 0,
          op: 60,
          st: 0,
          bm: 0,
        },
        {
          ddd: 0,
          ind: 11,
          ty: 0,
          nm: "Precomp. 1",
          tt: 1,
          refId: "comp_0",
          sr: 1,
          ks: {
            o: { a: 0, k: 100, ix: 11 },
            r: { a: 0, k: 0, ix: 10 },
            p: { a: 0, k: [200, 200, 0], ix: 2 },
            a: { a: 0, k: [200, 200, 0], ix: 1 },
            s: { a: 0, k: [100, 100, 100], ix: 6 },
          },
          ao: 0,
          w: 400,
          h: 400,
          ip: 0,
          op: 144,
          st: 0,
          bm: 0,
        },
      ],
    },
  });

  Promise.all([
    populateHomePage(),
    populateProjects(),
    populateSkills(),
    populateCertificates(),
  ]).then(() => {
    console.log("All data loaded successfully.");
    setTimeout(() => {
      loadingScreen.classList.add("hide");
      portfolioContainer.classList.add("show");
      setTimeout(() => loadingAnimation.destroy(), 500);
    }, 1500);
  });

  // --- C. THEME TOGGLER ---
  const body = document.body;
  const mobileThemeToggle = document.getElementById("mobile-theme-toggle");
  const desktopThemeToggle = document.getElementById("desktop-theme-toggle");
  const sunIcon = '<i class="fas fa-sun"></i>';
  const moonIcon = '<i class="fas fa-moon"></i>';

  const applyTheme = (theme) => {
    body.classList.toggle("dark-mode", theme === "dark");
    const newIcon = theme === "dark" ? sunIcon : moonIcon;
    mobileThemeToggle.innerHTML = newIcon;
    if (desktopThemeToggle) {
      desktopThemeToggle.innerHTML = newIcon;
    }

    if (window.pJSDom && window.pJSDom[0]) {
      const particlesInstance = window.pJSDom[0].pJS;
      const newColor = theme === "dark" ? "#ffffff" : "#1a1a1a";
      particlesInstance.particles.color.value = newColor;
      particlesInstance.particles.line_linked.color = newColor;
      particlesInstance.fn.particlesRefresh();
    }
  };

  const savedTheme = localStorage.getItem("theme") || "dark";
  applyTheme(savedTheme);

  const toggleTheme = () => {
    const newTheme = body.classList.contains("dark-mode") ? "light" : "dark";
    localStorage.setItem("theme", newTheme);
    applyTheme(newTheme);
  };

  mobileThemeToggle.addEventListener("click", toggleTheme);
  if (desktopThemeToggle) {
    desktopThemeToggle.addEventListener("click", toggleTheme);
  }

  // --- D. SECTION NAVIGATION WITH PAGE TRANSITIONS ---
  const allNavTriggers = document.querySelectorAll("[data-target]");
  let isTransitioning = false;

  allNavTriggers.forEach((link) => {
    link.addEventListener("click", (e) => {
      e.preventDefault();
      if (isTransitioning) return;

      const targetId = link.dataset.target;
      const currentActiveSection = document.querySelector(
        ".content-section.active"
      );

      if (
        !targetId ||
        (currentActiveSection && currentActiveSection.id === targetId)
      )
        return;
      isTransitioning = true;
      document
        .querySelectorAll(".nav-link")
        .forEach((l) => l.classList.remove("active"));
      document
        .querySelectorAll(`.nav-link[data-target="${targetId}"]`)
        .forEach((l) => l.classList.add("active"));

      if (currentActiveSection) {
        currentActiveSection.classList.add("fade-out");
        setTimeout(() => {
          currentActiveSection.classList.remove("active", "fade-out");
          const targetSection = document.getElementById(targetId);
          if (targetSection) targetSection.classList.add("active");
          document.querySelector(".main-content").scrollTop = 0;
          isTransitioning = false;
        }, 500);
      } else {
        const targetSection = document.getElementById(targetId);
        if (targetSection) targetSection.classList.add("active");
        isTransitioning = false;
      }
    });
  });

  // --- E. PROJECT MODAL LOGIC ---
  const projectModal = document.getElementById("project-modal");
  const projectsGridContainer = document.getElementById("projects-grid");
  const closeModalBtn = projectModal.querySelector(".modal-close");

  function showProjectDetails(projectId) {
    const project = projectsData.get(projectId);
    if (!project) return;
    document.getElementById("modal-project-image").src =
      project.imageUrl || "https://via.placeholder.com/400x180";
    document.getElementById("modal-project-title").textContent = project.title;
    document.getElementById("modal-project-description").textContent =
      project.description;
    projectModal.style.display = "flex";
  }

  function closeProjectModal() {
    projectModal.style.display = "none";
  }

  projectsGridContainer.addEventListener("click", (e) => {
    const detailsButton = e.target.closest(".view-details-btn");
    if (detailsButton) {
      showProjectDetails(detailsButton.dataset.projectId);
    }
  });

  closeModalBtn.addEventListener("click", closeProjectModal);
  projectModal.addEventListener("click", (e) => {
    if (e.target === projectModal) closeProjectModal();
  });
  window.addEventListener("keydown", (e) => {
    if (e.key === "Escape") closeProjectModal();
  });
});


----- C:/hello/portfolio\scripts\particles.min.js -----

/* -----------------------------------------------
/* Author : Vincent Garreau  - vincentgarreau.com
/* MIT license: http://opensource.org/licenses/MIT
/* Demo / Generator : vincentgarreau.com/particles.js
/* GitHub : github.com/VincentGarreau/particles.js
/* How to use? : Check the GitHub README
/* v2.0.0
/* ----------------------------------------------- */
function hexToRgb(e){var a=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;e=e.replace(a,function(e,a,t,i){return a+a+t+t+i+i});var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null}function clamp(e,a,t){return Math.min(Math.max(e,a),t)}function isInArray(e,a){return a.indexOf(e)>-1}var pJS=function(e,a){var t=document.querySelector("#"+e+" > .particles-js-canvas-el");this.pJS={canvas:{el:t,w:t.offsetWidth,h:t.offsetHeight},particles:{number:{value:400,density:{enable:!0,value_area:800}},color:{value:"#fff"},shape:{type:"circle",stroke:{width:0,color:"#ff0000"},polygon:{nb_sides:5},image:{src:"",width:100,height:100}},opacity:{value:1,random:!1,anim:{enable:!1,speed:2,opacity_min:0,sync:!1}},size:{value:20,random:!1,anim:{enable:!1,speed:20,size_min:0,sync:!1}},line_linked:{enable:!0,distance:100,color:"#fff",opacity:1,width:1},move:{enable:!0,speed:2,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:3e3,rotateY:3e3}},array:[]},interactivity:{detect_on:"canvas",events:{onhover:{enable:!0,mode:"grab"},onclick:{enable:!0,mode:"push"},resize:!0},modes:{grab:{distance:100,line_linked:{opacity:1}},bubble:{distance:200,size:80,duration:.4},repulse:{distance:200,duration:.4},push:{particles_nb:4},remove:{particles_nb:2}},mouse:{}},retina_detect:!1,fn:{interact:{},modes:{},vendors:{}},tmp:{}};var i=this.pJS;a&&Object.deepExtend(i,a),i.tmp.obj={size_value:i.particles.size.value,size_anim_speed:i.particles.size.anim.speed,move_speed:i.particles.move.speed,line_linked_distance:i.particles.line_linked.distance,line_linked_width:i.particles.line_linked.width,mode_grab_distance:i.interactivity.modes.grab.distance,mode_bubble_distance:i.interactivity.modes.bubble.distance,mode_bubble_size:i.interactivity.modes.bubble.size,mode_repulse_distance:i.interactivity.modes.repulse.distance},i.fn.retinaInit=function(){i.retina_detect&&window.devicePixelRatio>1?(i.canvas.pxratio=window.devicePixelRatio,i.tmp.retina=!0):(i.canvas.pxratio=1,i.tmp.retina=!1),i.canvas.w=i.canvas.el.offsetWidth*i.canvas.pxratio,i.canvas.h=i.canvas.el.offsetHeight*i.canvas.pxratio,i.particles.size.value=i.tmp.obj.size_value*i.canvas.pxratio,i.particles.size.anim.speed=i.tmp.obj.size_anim_speed*i.canvas.pxratio,i.particles.move.speed=i.tmp.obj.move_speed*i.canvas.pxratio,i.particles.line_linked.distance=i.tmp.obj.line_linked_distance*i.canvas.pxratio,i.interactivity.modes.grab.distance=i.tmp.obj.mode_grab_distance*i.canvas.pxratio,i.interactivity.modes.bubble.distance=i.tmp.obj.mode_bubble_distance*i.canvas.pxratio,i.particles.line_linked.width=i.tmp.obj.line_linked_width*i.canvas.pxratio,i.interactivity.modes.bubble.size=i.tmp.obj.mode_bubble_size*i.canvas.pxratio,i.interactivity.modes.repulse.distance=i.tmp.obj.mode_repulse_distance*i.canvas.pxratio},i.fn.canvasInit=function(){i.canvas.ctx=i.canvas.el.getContext("2d")},i.fn.canvasSize=function(){i.canvas.el.width=i.canvas.w,i.canvas.el.height=i.canvas.h,i&&i.interactivity.events.resize&&window.addEventListener("resize",function(){i.canvas.w=i.canvas.el.offsetWidth,i.canvas.h=i.canvas.el.offsetHeight,i.tmp.retina&&(i.canvas.w*=i.canvas.pxratio,i.canvas.h*=i.canvas.pxratio),i.canvas.el.width=i.canvas.w,i.canvas.el.height=i.canvas.h,i.particles.move.enable||(i.fn.particlesEmpty(),i.fn.particlesCreate(),i.fn.particlesDraw(),i.fn.vendors.densityAutoParticles()),i.fn.vendors.densityAutoParticles()})},i.fn.canvasPaint=function(){i.canvas.ctx.fillRect(0,0,i.canvas.w,i.canvas.h)},i.fn.canvasClear=function(){i.canvas.ctx.clearRect(0,0,i.canvas.w,i.canvas.h)},i.fn.particle=function(e,a,t){if(this.radius=(i.particles.size.random?Math.random():1)*i.particles.size.value,i.particles.size.anim.enable&&(this.size_status=!1,this.vs=i.particles.size.anim.speed/100,i.particles.size.anim.sync||(this.vs=this.vs*Math.random())),this.x=t?t.x:Math.random()*i.canvas.w,this.y=t?t.y:Math.random()*i.canvas.h,this.x>i.canvas.w-2*this.radius?this.x=this.x-this.radius:this.x<2*this.radius&&(this.x=this.x+this.radius),this.y>i.canvas.h-2*this.radius?this.y=this.y-this.radius:this.y<2*this.radius&&(this.y=this.y+this.radius),i.particles.move.bounce&&i.fn.vendors.checkOverlap(this,t),this.color={},"object"==typeof e.value)if(e.value instanceof Array){var s=e.value[Math.floor(Math.random()*i.particles.color.value.length)];this.color.rgb=hexToRgb(s)}else void 0!=e.value.r&&void 0!=e.value.g&&void 0!=e.value.b&&(this.color.rgb={r:e.value.r,g:e.value.g,b:e.value.b}),void 0!=e.value.h&&void 0!=e.value.s&&void 0!=e.value.l&&(this.color.hsl={h:e.value.h,s:e.value.s,l:e.value.l});else"random"==e.value?this.color.rgb={r:Math.floor(256*Math.random())+0,g:Math.floor(256*Math.random())+0,b:Math.floor(256*Math.random())+0}:"string"==typeof e.value&&(this.color=e,this.color.rgb=hexToRgb(this.color.value));this.opacity=(i.particles.opacity.random?Math.random():1)*i.particles.opacity.value,i.particles.opacity.anim.enable&&(this.opacity_status=!1,this.vo=i.particles.opacity.anim.speed/100,i.particles.opacity.anim.sync||(this.vo=this.vo*Math.random()));var n={};switch(i.particles.move.direction){case"top":n={x:0,y:-1};break;case"top-right":n={x:.5,y:-.5};break;case"right":n={x:1,y:-0};break;case"bottom-right":n={x:.5,y:.5};break;case"bottom":n={x:0,y:1};break;case"bottom-left":n={x:-.5,y:1};break;case"left":n={x:-1,y:0};break;case"top-left":n={x:-.5,y:-.5};break;default:n={x:0,y:0}}i.particles.move.straight?(this.vx=n.x,this.vy=n.y,i.particles.move.random&&(this.vx=this.vx*Math.random(),this.vy=this.vy*Math.random())):(this.vx=n.x+Math.random()-.5,this.vy=n.y+Math.random()-.5),this.vx_i=this.vx,this.vy_i=this.vy;var r=i.particles.shape.type;if("object"==typeof r){if(r instanceof Array){var c=r[Math.floor(Math.random()*r.length)];this.shape=c}}else this.shape=r;if("image"==this.shape){var o=i.particles.shape;this.img={src:o.image.src,ratio:o.image.width/o.image.height},this.img.ratio||(this.img.ratio=1),"svg"==i.tmp.img_type&&void 0!=i.tmp.source_svg&&(i.fn.vendors.createSvgImg(this),i.tmp.pushing&&(this.img.loaded=!1))}},i.fn.particle.prototype.draw=function(){function e(){i.canvas.ctx.drawImage(r,a.x-t,a.y-t,2*t,2*t/a.img.ratio)}var a=this;if(void 0!=a.radius_bubble)var t=a.radius_bubble;else var t=a.radius;if(void 0!=a.opacity_bubble)var s=a.opacity_bubble;else var s=a.opacity;if(a.color.rgb)var n="rgba("+a.color.rgb.r+","+a.color.rgb.g+","+a.color.rgb.b+","+s+")";else var n="hsla("+a.color.hsl.h+","+a.color.hsl.s+"%,"+a.color.hsl.l+"%,"+s+")";switch(i.canvas.ctx.fillStyle=n,i.canvas.ctx.beginPath(),a.shape){case"circle":i.canvas.ctx.arc(a.x,a.y,t,0,2*Math.PI,!1);break;case"edge":i.canvas.ctx.rect(a.x-t,a.y-t,2*t,2*t);break;case"triangle":i.fn.vendors.drawShape(i.canvas.ctx,a.x-t,a.y+t/1.66,2*t,3,2);break;case"polygon":i.fn.vendors.drawShape(i.canvas.ctx,a.x-t/(i.particles.shape.polygon.nb_sides/3.5),a.y-t/.76,2.66*t/(i.particles.shape.polygon.nb_sides/3),i.particles.shape.polygon.nb_sides,1);break;case"star":i.fn.vendors.drawShape(i.canvas.ctx,a.x-2*t/(i.particles.shape.polygon.nb_sides/4),a.y-t/1.52,2*t*2.66/(i.particles.shape.polygon.nb_sides/3),i.particles.shape.polygon.nb_sides,2);break;case"image":if("svg"==i.tmp.img_type)var r=a.img.obj;else var r=i.tmp.img_obj;r&&e()}i.canvas.ctx.closePath(),i.particles.shape.stroke.width>0&&(i.canvas.ctx.strokeStyle=i.particles.shape.stroke.color,i.canvas.ctx.lineWidth=i.particles.shape.stroke.width,i.canvas.ctx.stroke()),i.canvas.ctx.fill()},i.fn.particlesCreate=function(){for(var e=0;e<i.particles.number.value;e++)i.particles.array.push(new i.fn.particle(i.particles.color,i.particles.opacity.value))},i.fn.particlesUpdate=function(){for(var e=0;e<i.particles.array.length;e++){var a=i.particles.array[e];if(i.particles.move.enable){var t=i.particles.move.speed/2;a.x+=a.vx*t,a.y+=a.vy*t}if(i.particles.opacity.anim.enable&&(1==a.opacity_status?(a.opacity>=i.particles.opacity.value&&(a.opacity_status=!1),a.opacity+=a.vo):(a.opacity<=i.particles.opacity.anim.opacity_min&&(a.opacity_status=!0),a.opacity-=a.vo),a.opacity<0&&(a.opacity=0)),i.particles.size.anim.enable&&(1==a.size_status?(a.radius>=i.particles.size.value&&(a.size_status=!1),a.radius+=a.vs):(a.radius<=i.particles.size.anim.size_min&&(a.size_status=!0),a.radius-=a.vs),a.radius<0&&(a.radius=0)),"bounce"==i.particles.move.out_mode)var s={x_left:a.radius,x_right:i.canvas.w,y_top:a.radius,y_bottom:i.canvas.h};else var s={x_left:-a.radius,x_right:i.canvas.w+a.radius,y_top:-a.radius,y_bottom:i.canvas.h+a.radius};switch(a.x-a.radius>i.canvas.w?(a.x=s.x_left,a.y=Math.random()*i.canvas.h):a.x+a.radius<0&&(a.x=s.x_right,a.y=Math.random()*i.canvas.h),a.y-a.radius>i.canvas.h?(a.y=s.y_top,a.x=Math.random()*i.canvas.w):a.y+a.radius<0&&(a.y=s.y_bottom,a.x=Math.random()*i.canvas.w),i.particles.move.out_mode){case"bounce":a.x+a.radius>i.canvas.w?a.vx=-a.vx:a.x-a.radius<0&&(a.vx=-a.vx),a.y+a.radius>i.canvas.h?a.vy=-a.vy:a.y-a.radius<0&&(a.vy=-a.vy)}if(isInArray("grab",i.interactivity.events.onhover.mode)&&i.fn.modes.grabParticle(a),(isInArray("bubble",i.interactivity.events.onhover.mode)||isInArray("bubble",i.interactivity.events.onclick.mode))&&i.fn.modes.bubbleParticle(a),(isInArray("repulse",i.interactivity.events.onhover.mode)||isInArray("repulse",i.interactivity.events.onclick.mode))&&i.fn.modes.repulseParticle(a),i.particles.line_linked.enable||i.particles.move.attract.enable)for(var n=e+1;n<i.particles.array.length;n++){var r=i.particles.array[n];i.particles.line_linked.enable&&i.fn.interact.linkParticles(a,r),i.particles.move.attract.enable&&i.fn.interact.attractParticles(a,r),i.particles.move.bounce&&i.fn.interact.bounceParticles(a,r)}}},i.fn.particlesDraw=function(){i.canvas.ctx.clearRect(0,0,i.canvas.w,i.canvas.h),i.fn.particlesUpdate();for(var e=0;e<i.particles.array.length;e++){var a=i.particles.array[e];a.draw()}},i.fn.particlesEmpty=function(){i.particles.array=[]},i.fn.particlesRefresh=function(){cancelRequestAnimFrame(i.fn.checkAnimFrame),cancelRequestAnimFrame(i.fn.drawAnimFrame),i.tmp.source_svg=void 0,i.tmp.img_obj=void 0,i.tmp.count_svg=0,i.fn.particlesEmpty(),i.fn.canvasClear(),i.fn.vendors.start()},i.fn.interact.linkParticles=function(e,a){var t=e.x-a.x,s=e.y-a.y,n=Math.sqrt(t*t+s*s);if(n<=i.particles.line_linked.distance){var r=i.particles.line_linked.opacity-n/(1/i.particles.line_linked.opacity)/i.particles.line_linked.distance;if(r>0){var c=i.particles.line_linked.color_rgb_line;i.canvas.ctx.strokeStyle="rgba("+c.r+","+c.g+","+c.b+","+r+")",i.canvas.ctx.lineWidth=i.particles.line_linked.width,i.canvas.ctx.beginPath(),i.canvas.ctx.moveTo(e.x,e.y),i.canvas.ctx.lineTo(a.x,a.y),i.canvas.ctx.stroke(),i.canvas.ctx.closePath()}}},i.fn.interact.attractParticles=function(e,a){var t=e.x-a.x,s=e.y-a.y,n=Math.sqrt(t*t+s*s);if(n<=i.particles.line_linked.distance){var r=t/(1e3*i.particles.move.attract.rotateX),c=s/(1e3*i.particles.move.attract.rotateY);e.vx-=r,e.vy-=c,a.vx+=r,a.vy+=c}},i.fn.interact.bounceParticles=function(e,a){var t=e.x-a.x,i=e.y-a.y,s=Math.sqrt(t*t+i*i),n=e.radius+a.radius;n>=s&&(e.vx=-e.vx,e.vy=-e.vy,a.vx=-a.vx,a.vy=-a.vy)},i.fn.modes.pushParticles=function(e,a){i.tmp.pushing=!0;for(var t=0;e>t;t++)i.particles.array.push(new i.fn.particle(i.particles.color,i.particles.opacity.value,{x:a?a.pos_x:Math.random()*i.canvas.w,y:a?a.pos_y:Math.random()*i.canvas.h})),t==e-1&&(i.particles.move.enable||i.fn.particlesDraw(),i.tmp.pushing=!1)},i.fn.modes.removeParticles=function(e){i.particles.array.splice(0,e),i.particles.move.enable||i.fn.particlesDraw()},i.fn.modes.bubbleParticle=function(e){function a(){e.opacity_bubble=e.opacity,e.radius_bubble=e.radius}function t(a,t,s,n,c){if(a!=t)if(i.tmp.bubble_duration_end){if(void 0!=s){var o=n-p*(n-a)/i.interactivity.modes.bubble.duration,l=a-o;d=a+l,"size"==c&&(e.radius_bubble=d),"opacity"==c&&(e.opacity_bubble=d)}}else if(r<=i.interactivity.modes.bubble.distance){if(void 0!=s)var v=s;else var v=n;if(v!=a){var d=n-p*(n-a)/i.interactivity.modes.bubble.duration;"size"==c&&(e.radius_bubble=d),"opacity"==c&&(e.opacity_bubble=d)}}else"size"==c&&(e.radius_bubble=void 0),"opacity"==c&&(e.opacity_bubble=void 0)}if(i.interactivity.events.onhover.enable&&isInArray("bubble",i.interactivity.events.onhover.mode)){var s=e.x-i.interactivity.mouse.pos_x,n=e.y-i.interactivity.mouse.pos_y,r=Math.sqrt(s*s+n*n),c=1-r/i.interactivity.modes.bubble.distance;if(r<=i.interactivity.modes.bubble.distance){if(c>=0&&"mousemove"==i.interactivity.status){if(i.interactivity.modes.bubble.size!=i.particles.size.value)if(i.interactivity.modes.bubble.size>i.particles.size.value){var o=e.radius+i.interactivity.modes.bubble.size*c;o>=0&&(e.radius_bubble=o)}else{var l=e.radius-i.interactivity.modes.bubble.size,o=e.radius-l*c;o>0?e.radius_bubble=o:e.radius_bubble=0}if(i.interactivity.modes.bubble.opacity!=i.particles.opacity.value)if(i.interactivity.modes.bubble.opacity>i.particles.opacity.value){var v=i.interactivity.modes.bubble.opacity*c;v>e.opacity&&v<=i.interactivity.modes.bubble.opacity&&(e.opacity_bubble=v)}else{var v=e.opacity-(i.particles.opacity.value-i.interactivity.modes.bubble.opacity)*c;v<e.opacity&&v>=i.interactivity.modes.bubble.opacity&&(e.opacity_bubble=v)}}}else a();"mouseleave"==i.interactivity.status&&a()}else if(i.interactivity.events.onclick.enable&&isInArray("bubble",i.interactivity.events.onclick.mode)){if(i.tmp.bubble_clicking){var s=e.x-i.interactivity.mouse.click_pos_x,n=e.y-i.interactivity.mouse.click_pos_y,r=Math.sqrt(s*s+n*n),p=((new Date).getTime()-i.interactivity.mouse.click_time)/1e3;p>i.interactivity.modes.bubble.duration&&(i.tmp.bubble_duration_end=!0),p>2*i.interactivity.modes.bubble.duration&&(i.tmp.bubble_clicking=!1,i.tmp.bubble_duration_end=!1)}i.tmp.bubble_clicking&&(t(i.interactivity.modes.bubble.size,i.particles.size.value,e.radius_bubble,e.radius,"size"),t(i.interactivity.modes.bubble.opacity,i.particles.opacity.value,e.opacity_bubble,e.opacity,"opacity"))}},i.fn.modes.repulseParticle=function(e){function a(){var a=Math.atan2(d,p);if(e.vx=u*Math.cos(a),e.vy=u*Math.sin(a),"bounce"==i.particles.move.out_mode){var t={x:e.x+e.vx,y:e.y+e.vy};t.x+e.radius>i.canvas.w?e.vx=-e.vx:t.x-e.radius<0&&(e.vx=-e.vx),t.y+e.radius>i.canvas.h?e.vy=-e.vy:t.y-e.radius<0&&(e.vy=-e.vy)}}if(i.interactivity.events.onhover.enable&&isInArray("repulse",i.interactivity.events.onhover.mode)&&"mousemove"==i.interactivity.status){var t=e.x-i.interactivity.mouse.pos_x,s=e.y-i.interactivity.mouse.pos_y,n=Math.sqrt(t*t+s*s),r={x:t/n,y:s/n},c=i.interactivity.modes.repulse.distance,o=100,l=clamp(1/c*(-1*Math.pow(n/c,2)+1)*c*o,0,50),v={x:e.x+r.x*l,y:e.y+r.y*l};"bounce"==i.particles.move.out_mode?(v.x-e.radius>0&&v.x+e.radius<i.canvas.w&&(e.x=v.x),v.y-e.radius>0&&v.y+e.radius<i.canvas.h&&(e.y=v.y)):(e.x=v.x,e.y=v.y)}else if(i.interactivity.events.onclick.enable&&isInArray("repulse",i.interactivity.events.onclick.mode))if(i.tmp.repulse_finish||(i.tmp.repulse_count++,i.tmp.repulse_count==i.particles.array.length&&(i.tmp.repulse_finish=!0)),i.tmp.repulse_clicking){var c=Math.pow(i.interactivity.modes.repulse.distance/6,3),p=i.interactivity.mouse.click_pos_x-e.x,d=i.interactivity.mouse.click_pos_y-e.y,m=p*p+d*d,u=-c/m*1;c>=m&&a()}else 0==i.tmp.repulse_clicking&&(e.vx=e.vx_i,e.vy=e.vy_i)},i.fn.modes.grabParticle=function(e){if(i.interactivity.events.onhover.enable&&"mousemove"==i.interactivity.status){var a=e.x-i.interactivity.mouse.pos_x,t=e.y-i.interactivity.mouse.pos_y,s=Math.sqrt(a*a+t*t);if(s<=i.interactivity.modes.grab.distance){var n=i.interactivity.modes.grab.line_linked.opacity-s/(1/i.interactivity.modes.grab.line_linked.opacity)/i.interactivity.modes.grab.distance;if(n>0){var r=i.particles.line_linked.color_rgb_line;i.canvas.ctx.strokeStyle="rgba("+r.r+","+r.g+","+r.b+","+n+")",i.canvas.ctx.lineWidth=i.particles.line_linked.width,i.canvas.ctx.beginPath(),i.canvas.ctx.moveTo(e.x,e.y),i.canvas.ctx.lineTo(i.interactivity.mouse.pos_x,i.interactivity.mouse.pos_y),i.canvas.ctx.stroke(),i.canvas.ctx.closePath()}}}},i.fn.vendors.eventsListeners=function(){"window"==i.interactivity.detect_on?i.interactivity.el=window:i.interactivity.el=i.canvas.el,(i.interactivity.events.onhover.enable||i.interactivity.events.onclick.enable)&&(i.interactivity.el.addEventListener("mousemove",function(e){if(i.interactivity.el==window)var a=e.clientX,t=e.clientY;else var a=e.offsetX||e.clientX,t=e.offsetY||e.clientY;i.interactivity.mouse.pos_x=a,i.interactivity.mouse.pos_y=t,i.tmp.retina&&(i.interactivity.mouse.pos_x*=i.canvas.pxratio,i.interactivity.mouse.pos_y*=i.canvas.pxratio),i.interactivity.status="mousemove"}),i.interactivity.el.addEventListener("mouseleave",function(e){i.interactivity.mouse.pos_x=null,i.interactivity.mouse.pos_y=null,i.interactivity.status="mouseleave"})),i.interactivity.events.onclick.enable&&i.interactivity.el.addEventListener("click",function(){if(i.interactivity.mouse.click_pos_x=i.interactivity.mouse.pos_x,i.interactivity.mouse.click_pos_y=i.interactivity.mouse.pos_y,i.interactivity.mouse.click_time=(new Date).getTime(),i.interactivity.events.onclick.enable)switch(i.interactivity.events.onclick.mode){case"push":i.particles.move.enable?i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb,i.interactivity.mouse):1==i.interactivity.modes.push.particles_nb?i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb,i.interactivity.mouse):i.interactivity.modes.push.particles_nb>1&&i.fn.modes.pushParticles(i.interactivity.modes.push.particles_nb);break;case"remove":i.fn.modes.removeParticles(i.interactivity.modes.remove.particles_nb);break;case"bubble":i.tmp.bubble_clicking=!0;break;case"repulse":i.tmp.repulse_clicking=!0,i.tmp.repulse_count=0,i.tmp.repulse_finish=!1,setTimeout(function(){i.tmp.repulse_clicking=!1},1e3*i.interactivity.modes.repulse.duration)}})},i.fn.vendors.densityAutoParticles=function(){if(i.particles.number.density.enable){var e=i.canvas.el.width*i.canvas.el.height/1e3;i.tmp.retina&&(e/=2*i.canvas.pxratio);var a=e*i.particles.number.value/i.particles.number.density.value_area,t=i.particles.array.length-a;0>t?i.fn.modes.pushParticles(Math.abs(t)):i.fn.modes.removeParticles(t)}},i.fn.vendors.checkOverlap=function(e,a){for(var t=0;t<i.particles.array.length;t++){var s=i.particles.array[t],n=e.x-s.x,r=e.y-s.y,c=Math.sqrt(n*n+r*r);c<=e.radius+s.radius&&(e.x=a?a.x:Math.random()*i.canvas.w,e.y=a?a.y:Math.random()*i.canvas.h,i.fn.vendors.checkOverlap(e))}},i.fn.vendors.createSvgImg=function(e){var a=i.tmp.source_svg,t=/#([0-9A-F]{3,6})/gi,s=a.replace(t,function(a,t,i,s){if(e.color.rgb)var n="rgba("+e.color.rgb.r+","+e.color.rgb.g+","+e.color.rgb.b+","+e.opacity+")";else var n="hsla("+e.color.hsl.h+","+e.color.hsl.s+"%,"+e.color.hsl.l+"%,"+e.opacity+")";return n}),n=new Blob([s],{type:"image/svg+xml;charset=utf-8"}),r=window.URL||window.webkitURL||window,c=r.createObjectURL(n),o=new Image;o.addEventListener("load",function(){e.img.obj=o,e.img.loaded=!0,r.revokeObjectURL(c),i.tmp.count_svg++}),o.src=c},i.fn.vendors.destroypJS=function(){cancelAnimationFrame(i.fn.drawAnimFrame),t.remove(),pJSDom=null},i.fn.vendors.drawShape=function(e,a,t,i,s,n){var r=s*n,c=s/n,o=180*(c-2)/c,l=Math.PI-Math.PI*o/180;e.save(),e.beginPath(),e.translate(a,t),e.moveTo(0,0);for(var v=0;r>v;v++)e.lineTo(i,0),e.translate(i,0),e.rotate(l);e.fill(),e.restore()},i.fn.vendors.exportImg=function(){window.open(i.canvas.el.toDataURL("image/png"),"_blank")},i.fn.vendors.loadImg=function(e){if(i.tmp.img_error=void 0,""!=i.particles.shape.image.src)if("svg"==e){var a=new XMLHttpRequest;a.open("GET",i.particles.shape.image.src),a.onreadystatechange=function(e){4==a.readyState&&(200==a.status?(i.tmp.source_svg=e.currentTarget.response,i.fn.vendors.checkBeforeDraw()):(console.log("Error pJS - Image not found"),i.tmp.img_error=!0))},a.send()}else{var t=new Image;t.addEventListener("load",function(){i.tmp.img_obj=t,i.fn.vendors.checkBeforeDraw()}),t.src=i.particles.shape.image.src}else console.log("Error pJS - No image.src"),i.tmp.img_error=!0},i.fn.vendors.draw=function(){"image"==i.particles.shape.type?"svg"==i.tmp.img_type?i.tmp.count_svg>=i.particles.number.value?(i.fn.particlesDraw(),i.particles.move.enable?i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw):cancelRequestAnimFrame(i.fn.drawAnimFrame)):i.tmp.img_error||(i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw)):void 0!=i.tmp.img_obj?(i.fn.particlesDraw(),i.particles.move.enable?i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw):cancelRequestAnimFrame(i.fn.drawAnimFrame)):i.tmp.img_error||(i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw)):(i.fn.particlesDraw(),i.particles.move.enable?i.fn.drawAnimFrame=requestAnimFrame(i.fn.vendors.draw):cancelRequestAnimFrame(i.fn.drawAnimFrame))},i.fn.vendors.checkBeforeDraw=function(){"image"==i.particles.shape.type?"svg"==i.tmp.img_type&&void 0==i.tmp.source_svg?i.tmp.checkAnimFrame=requestAnimFrame(check):(cancelRequestAnimFrame(i.tmp.checkAnimFrame),i.tmp.img_error||(i.fn.vendors.init(),i.fn.vendors.draw())):(i.fn.vendors.init(),i.fn.vendors.draw())},i.fn.vendors.init=function(){i.fn.retinaInit(),i.fn.canvasInit(),i.fn.canvasSize(),i.fn.canvasPaint(),i.fn.particlesCreate(),i.fn.vendors.densityAutoParticles(),i.particles.line_linked.color_rgb_line=hexToRgb(i.particles.line_linked.color)},i.fn.vendors.start=function(){isInArray("image",i.particles.shape.type)?(i.tmp.img_type=i.particles.shape.image.src.substr(i.particles.shape.image.src.length-3),i.fn.vendors.loadImg(i.tmp.img_type)):i.fn.vendors.checkBeforeDraw()},i.fn.vendors.eventsListeners(),i.fn.vendors.start()};Object.deepExtend=function(e,a){for(var t in a)a[t]&&a[t].constructor&&a[t].constructor===Object?(e[t]=e[t]||{},arguments.callee(e[t],a[t])):e[t]=a[t];return e},window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)}}(),window.cancelRequestAnimFrame=function(){return window.cancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||clearTimeout}(),window.pJSDom=[],window.particlesJS=function(e,a){"string"!=typeof e&&(a=e,e="particles-js"),e||(e="particles-js");var t=document.getElementById(e),i="particles-js-canvas-el",s=t.getElementsByClassName(i);if(s.length)for(;s.length>0;)t.removeChild(s[0]);var n=document.createElement("canvas");n.className=i,n.style.width="100%",n.style.height="100%";var r=document.getElementById(e).appendChild(n);null!=r&&pJSDom.push(new pJS(e,a))},window.particlesJS.load=function(e,a,t){var i=new XMLHttpRequest;i.open("GET",a),i.onreadystatechange=function(a){if(4==i.readyState)if(200==i.status){var s=JSON.parse(a.currentTarget.response);window.particlesJS(e,s),t&&t()}else console.log("Error pJS - XMLHttpRequest status: "+i.status),console.log("Error pJS - File config not found")},i.send()};